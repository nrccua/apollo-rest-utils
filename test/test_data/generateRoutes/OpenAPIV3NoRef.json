{
    "openapi": "3.0.2",
    "info": {
        "title": "Encourage Service",
        "description": "Encourage Service endpoints used by Encourage clients and other internal services",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.dev-encourage.myoptions.org/v1",
            "description": "URL for \"development\" environment"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Health Checker",
                "operationId": "health",
                "description": "Check service status and environment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "database": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "genericCache": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "myOptions": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "secondarySchoolService": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "studentCredentials": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "studentService": {
                                            "type": "string",
                                            "example": "development"
                                        },
                                        "ums": {
                                            "type": "string",
                                            "example": "development"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Authenticates a user",
                "operationId": "login",
                "security": [],
                "requestBody": {
                    "required": true,
                    "description": "email and password to be used in the authentication process. If acceptedTerms is set to true, it will update user's terms attribute",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "testPassword"
                                    },
                                    "acceptedTerms": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "User",
                                                    "default": "User",
                                                    "enum": [
                                                        "LdapUser",
                                                        "Role",
                                                        "User"
                                                    ]
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                },
                                                "userName": {
                                                    "type": "string",
                                                    "example": "testUserName"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Active",
                                                    "enum": [
                                                        "Active",
                                                        "Inactive",
                                                        "Pending",
                                                        "Disabled"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@user.mail"
                                                },
                                                "verifiedDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "externalIds": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "uid",
                                                            "userUid",
                                                            "source",
                                                            "externalId"
                                                        ],
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "aaaa-bbbbb-ccccc-ddddd",
                                                                "description": "UMS unique identifier for the external ID entity"
                                                            },
                                                            "userUid": {
                                                                "type": "string",
                                                                "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                            },
                                                            "organizationUid": {
                                                                "type": "string",
                                                                "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                                "description": "Optional property if the external ID for the user is related to an org"
                                                            },
                                                            "source": {
                                                                "type": "string",
                                                                "example": "contact_id"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "HCSXFXYZ"
                                                            }
                                                        }
                                                    }
                                                },
                                                "creator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        }
                                                    }
                                                },
                                                "versionWarning": {
                                                    "type": "boolean",
                                                    "example": "false",
                                                    "default": "false"
                                                },
                                                "application": {
                                                    "type": "object",
                                                    "properties": {
                                                        "modules": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "permissionOverwrite": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "attributesOverwrite": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string",
                                                                                "example": "tempore"
                                                                            },
                                                                            "value": {
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "key": {
                                                            "type": "string",
                                                            "example": "Encourage"
                                                        }
                                                    }
                                                },
                                                "organizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Organization",
                                                                    "OrgType"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Active",
                                                                    "Inactive",
                                                                    "Pending"
                                                                ],
                                                                "example": "Pending"
                                                            },
                                                            "sfAccountId": {
                                                                "type": "string",
                                                                "example": "0016000000ImzzJAAR"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "003422"
                                                            },
                                                            "actCode": {
                                                                "type": "string",
                                                                "example": "0011"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "programs": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "group": {},
                                                            "parent": {},
                                                            "creator": {},
                                                            "users": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "key"
                                                                    ],
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string",
                                                                            "example": "tempore"
                                                                        },
                                                                        "value": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                            },
                                                            "roleName": {
                                                                "type": "string",
                                                                "example": "Administrator"
                                                            }
                                                        }
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "tempore"
                                                            },
                                                            "value": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "sessionToken": {
                                            "type": "string",
                                            "format": "byte",
                                            "example": "Base64 string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Missing user credentials (email and/or password)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/activate-user": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Activate user",
                "operationId": "activateUser",
                "description": "Verifies user e-mail and if e-mail is valid, activate user and set userName and password as provided on body.",
                "security": [],
                "requestBody": {
                    "required": true,
                    "description": "Body contains the user e-mail to be verified and the verificationCode, which corresponds to the authToken \n          in the user model; the userName to be set; the password; and user uid",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "verificationCode",
                                    "userName",
                                    "password"
                                ],
                                "properties": {
                                    "verificationCode": {
                                        "type": "string",
                                        "example": "$2a$10$aslynLtrxxuZXFgKSYf4Bae.4D8Mm6aG/m/nqORbiByEVpqndy3coi"
                                    },
                                    "userName": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "p455w0rd"
                                    },
                                    "acceptedTerms": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "User",
                                                    "default": "User",
                                                    "enum": [
                                                        "LdapUser",
                                                        "Role",
                                                        "User"
                                                    ]
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                },
                                                "userName": {
                                                    "type": "string",
                                                    "example": "testUserName"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Active",
                                                    "enum": [
                                                        "Active",
                                                        "Inactive",
                                                        "Pending",
                                                        "Disabled"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@user.mail"
                                                },
                                                "verifiedDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "externalIds": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "uid",
                                                            "userUid",
                                                            "source",
                                                            "externalId"
                                                        ],
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "aaaa-bbbbb-ccccc-ddddd",
                                                                "description": "UMS unique identifier for the external ID entity"
                                                            },
                                                            "userUid": {
                                                                "type": "string",
                                                                "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                            },
                                                            "organizationUid": {
                                                                "type": "string",
                                                                "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                                "description": "Optional property if the external ID for the user is related to an org"
                                                            },
                                                            "source": {
                                                                "type": "string",
                                                                "example": "contact_id"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "HCSXFXYZ"
                                                            }
                                                        }
                                                    }
                                                },
                                                "creator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        }
                                                    }
                                                },
                                                "versionWarning": {
                                                    "type": "boolean",
                                                    "example": "false",
                                                    "default": "false"
                                                },
                                                "application": {
                                                    "type": "object",
                                                    "properties": {
                                                        "modules": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "permissionOverwrite": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "attributesOverwrite": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string",
                                                                                "example": "tempore"
                                                                            },
                                                                            "value": {
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "key": {
                                                            "type": "string",
                                                            "example": "Encourage"
                                                        }
                                                    }
                                                },
                                                "organizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Organization",
                                                                    "OrgType"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Active",
                                                                    "Inactive",
                                                                    "Pending"
                                                                ],
                                                                "example": "Pending"
                                                            },
                                                            "sfAccountId": {
                                                                "type": "string",
                                                                "example": "0016000000ImzzJAAR"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "003422"
                                                            },
                                                            "actCode": {
                                                                "type": "string",
                                                                "example": "0011"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "programs": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "group": {},
                                                            "parent": {},
                                                            "creator": {},
                                                            "users": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "key"
                                                                    ],
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string",
                                                                            "example": "tempore"
                                                                        },
                                                                        "value": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                            },
                                                            "roleName": {
                                                                "type": "string",
                                                                "example": "Administrator"
                                                            }
                                                        }
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "tempore"
                                                            },
                                                            "value": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Send forgot password e-mail",
                "operationId": "forgotPassword",
                "description": "Requests a password change. An e-mail with instructions on how to change the password will be sent to the configured user e-mail.",
                "security": [],
                "requestBody": {
                    "required": true,
                    "description": "Body should have the e-mail or userName of the user that forgot his password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "credential": {
                                        "type": "string",
                                        "example": "admin@nrccua.org"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Reset or change user password",
                "operationId": "resetPassword",
                "description": "Changes user password to a new password provided in the request body.",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Body must always contain the <b>newPassword</b> field.\n          This route has different behaviors depending on headers and body provided:\n          <ul>\n          \n  <li>\n    A logged in LDAP user can change any user's password based on <b>uid</b> or <b>email</b>\n    <br>\n    <b>Authentication</b> header with JWT is required; request body must have either <b>uid</b> or <b>email</b>:\n    <br>\n    <div style=\"margin: 25px\">\n      <code style=\"padding: 15px\">\n        {\n          \"uid\": \"eabac226-5706-4e7c-812c-00b19e2ddf4b\",\n          \"email\": \"user@mail.com\",\n          \"newPassword\": \"password123\"\n        }\n      </code>\n    </div>\n  </li>\n  <br>\n          \n  <li>\n    A logged in regular user can change his own password\n    <br>\n    <b>Authentication</b> header with JWT is required; request body must have current <b>password</b>:\n    <br>\n    <div style=\"margin: 25px\">\n      <code style=\"padding: 15px\">\n        {\n          \"password\": \"something456\",\n          \"newPassword\": \"password123\"\n        }\n      </code>\n    </div>\n  </li>\n  <br>\n          \n  <li>\n    A user can change his password by following the forgot email link, which contains a verification code\n    <br>\n    <b>Authentication</b> header must be omitted; request body must have the <b>verificationCode</b>:\n    <br>\n    <div style=\"margin: 25px\">\n      <code style=\"padding: 15px\">\n        {\n          \"verificationCode\": \"$2a$10$asynLtrxxuZXFgKSYf4Bae.4D8Mm6aG/m/nqORbiByEVpqndy3coi\",\n          \"newPassword\": \"admin\"\n        }\n      </code>\n    </div>\n  </li>\n  <br>\n          <ul/>",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "newPassword"
                                ],
                                "properties": {
                                    "uid": {
                                        "type": "string",
                                        "example": "eabac226-5706-4e7c-812c-00b19e2ddf4b"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "admin@nrccua.org"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "verificationCode": {
                                        "type": "string",
                                        "example": "$2a$10$asynLtrxxuZXFgKSYf4Bae.4D8Mm6aG/m/nqORbiByEVpqndy3coi"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Missing required field"
                    },
                    "403": {
                        "description": "Info doesn't match"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/refresh-token": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Refresh JWT",
                "operationId": "refreshJWT",
                "description": "Return a new Json Web Token with a refreshed expiration time.",
                "security": [],
                "responses": {
                    "200": {
                        "description": "JWT successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sessionToken": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/authorize-module/{moduleIdentifier}": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Check authorization to module",
                "operationId": "checkModuleAuthorization",
                "description": "Check authorization to module by moduleIdentifier (it could be both uid or key).",
                "security": [],
                "parameters": [
                    {
                        "name": "moduleIdentifier",
                        "in": "path",
                        "description": "Module identifier (can be uid or key)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "overwrites",
                        "in": "query",
                        "description": "Send it as 'true' to receive attribute overwrites. Default is false.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                true,
                                false
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has access to module",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "authorize": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "credentials": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "testUser"
                                                },
                                                "userName": {
                                                    "type": "string",
                                                    "example": "testUserName"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "testUserEmail"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Active"
                                                },
                                                "exp": {
                                                    "type": "integer"
                                                },
                                                "iss": {
                                                    "type": "string"
                                                },
                                                "organizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            }
                                                        }
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "example": []
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/validate-email": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Validate Email",
                "operationId": "validateEmail",
                "description": "Return a flag indicating if e-mails is valid (not used yet) or invalid.",
                "security": [],
                "requestBody": {
                    "required": true,
                    "description": "Body must contain the e-mail to be validated, in other words, an e-mail that uniqueness will be verified.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "son.goku@capsule-corp.org"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email validated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isEmailUnique": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/identify-email": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Identify Email",
                "operationId": "identifyEmail",
                "description": "Identify whether the email exists in UMS (`existing`) and is supported (`supported`) by Encourage. DataLab users are not supported.",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Body must contain the e-mail to be identified.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "testemail@test.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "existing": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "supported": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "isActive": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing email"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/validate-username": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Validate Username",
                "operationId": "validateUsername",
                "description": "Return flags indicating if username is valid (not used yet) or invalid.",
                "security": [],
                "requestBody": {
                    "required": true,
                    "description": "Body must contain the username to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "example": "son.goku"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Username validated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isUsernameUnique": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "isUsernameValid": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/detailed-permissions": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Gets a list of user orgs with permissions",
                "description": "Gets a user org list for the requester and adds boolean flag for each attribute in userOrg permissions, if permission is false, it won't be returned",
                "operationId": "getOrgPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "organization": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Organization",
                                                            "OrgType"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NitzscheandSons"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "003422"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "teacher"
                                                    }
                                                }
                                            },
                                            "permissions": {
                                                "type": "object",
                                                "properties": {
                                                    "applicationManagement": {
                                                        "type": "boolean"
                                                    },
                                                    "credentialSubmission": {
                                                        "type": "boolean"
                                                    },
                                                    "highSchoolAdmin": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/generic-permissions": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Gets user's access to each encourage module",
                "description": "Returns object containing information whether user is authorized or not for each module associated with encourage application",
                "operationId": "getGlobalPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mentoring": {
                                            "type": "boolean"
                                        },
                                        "applicationManagement": {
                                            "type": "boolean"
                                        },
                                        "research": {
                                            "type": "boolean"
                                        },
                                        "credentialSubmission": {
                                            "type": "boolean"
                                        },
                                        "highSchoolAdmin": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Gets a list of Encourage Users",
                "description": "If the requesting user has the readUserList permission module, gets a list of users",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "searchStr",
                        "schema": {
                            "type": "string",
                            "example": "stringToSearch"
                        },
                        "required": false,
                        "description": "Filter users list by searchStr. Example: searchStr=Abbott. \n      This will get all users containing Abbott in an important field (firstName, lastName, userName, email)"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    },
                    {
                        "in": "query",
                        "name": "firstName",
                        "schema": {
                            "type": "string",
                            "example": "Jack|Jackson"
                        },
                        "description": "Filter user list by firstName Example: firstName=Jack|Jackson This will get all users with firstName matching \"Jack\" or \"Jackson\"\n"
                    },
                    {
                        "in": "query",
                        "name": "lastName",
                        "schema": {
                            "type": "string",
                            "example": "Sam|Samwise"
                        },
                        "description": "Filter user list by lastName Example: lastName=Sam|Samwise This will get all users with lastName matching \"Sam\" or \"Samwise\"\n"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string",
                            "example": "mail@mal.com"
                        },
                        "description": "Filter user list by email Example: firstName=mail@mail.com This will get the user with email \"mail@mail.com\"\n"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Active",
                                "Inactive",
                                "Pending"
                            ]
                        },
                        "required": false,
                        "description": "Filters list by status"
                    },
                    {
                        "in": "query",
                        "name": "createdAt",
                        "schema": {
                            "type": "string",
                            "example": "2020-03-26T17:16:46.872Z"
                        },
                        "description": "Filter by createdAt. Example 2020-03-26T17:16:46.872Z"
                    },
                    {
                        "in": "query",
                        "name": "verifiedDate",
                        "schema": {
                            "type": "string",
                            "example": "2020-03-26T17:16:46.872Z"
                        },
                        "description": "Filter by verifiedDate. Example 2020-03-26T17:16:46.872Z"
                    },
                    {
                        "in": "query",
                        "name": "ignore",
                        "schema": {
                            "type": "string",
                            "example": "firstName|lastName"
                        },
                        "required": false,
                        "description": "List of user fields to ignore on search when passing searchStr parameter.\n      Example: ignore=firstName|lastName"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "example": "User"
                        },
                        "description": "Filter user list by type Example: type=User This will get all users which are of User type"
                    },
                    {
                        "in": "query",
                        "name": "externalId",
                        "schema": {
                            "type": "string",
                            "example": "HC000123"
                        }
                    },
                    {
                        "in": "query",
                        "name": "externalSource",
                        "schema": {
                            "type": "string",
                            "example": "contact_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "uid": {
                                                "type": "string",
                                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "User",
                                                "default": "User",
                                                "enum": [
                                                    "LdapUser",
                                                    "Role",
                                                    "User"
                                                ]
                                            },
                                            "firstName": {
                                                "type": "string",
                                                "example": "testUserFirstName"
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "example": "testUserLastName"
                                            },
                                            "userName": {
                                                "type": "string",
                                                "example": "testUserName"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Active",
                                                "enum": [
                                                    "Active",
                                                    "Inactive",
                                                    "Pending",
                                                    "Disabled"
                                                ]
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "test@user.mail"
                                            },
                                            "verifiedDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2019-01-07T18:29:25.493Z"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2019-01-07T18:29:25.493Z"
                                            },
                                            "updatedAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2019-01-07T18:29:25.493Z"
                                            },
                                            "externalIds": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "uid",
                                                        "userUid",
                                                        "source",
                                                        "externalId"
                                                    ],
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "aaaa-bbbbb-ccccc-ddddd",
                                                            "description": "UMS unique identifier for the external ID entity"
                                                        },
                                                        "userUid": {
                                                            "type": "string",
                                                            "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                        },
                                                        "organizationUid": {
                                                            "type": "string",
                                                            "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                            "description": "Optional property if the external ID for the user is related to an org"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "example": "contact_id"
                                                        },
                                                        "externalId": {
                                                            "type": "string",
                                                            "example": "HCSXFXYZ"
                                                        }
                                                    }
                                                }
                                            },
                                            "versionWarning": {
                                                "type": "boolean",
                                                "example": "false",
                                                "default": "false"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Creates a new Encourage User",
                "description": "Creates a new user passing user data. Not all user model fields are required, check its description for reference.\n        The \"permissions\" and \"roles\" fields require special permissions to be added. When making an user inactive, it also removes its Admin status.",
                "operationId": "createUser",
                "parameters": [
                    {
                        "name": "Send-Email",
                        "in": "header",
                        "description": "Indicates whether an actual email should be sent or not. For security reasons the default behavior is to not send any email.\n",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "not-allowed",
                                "allowed"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "email"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "User",
                                        "default": "User",
                                        "enum": [
                                            "LdapUser",
                                            "Role",
                                            "User"
                                        ]
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    },
                                    "userName": {
                                        "type": "string",
                                        "example": "testUserName"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Active",
                                        "enum": [
                                            "Active",
                                            "Inactive",
                                            "Pending",
                                            "Disabled"
                                        ]
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@user.mail"
                                    },
                                    "attributes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "key"
                                            ],
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "example": "tempore"
                                                },
                                                "value": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "moduleKey"
                                            ],
                                            "properties": {
                                                "moduleKey": {
                                                    "type": "string",
                                                    "example": "encourage.engagementanalytics.marketingconversion"
                                                },
                                                "permissionOverwrite": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "tempore"
                                                            },
                                                            "value": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                },
                                                "roleName": {
                                                    "type": "string",
                                                    "example": "Administrator"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "creator": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                }
                                            }
                                        },
                                        "versionWarning": {
                                            "type": "boolean",
                                            "example": "false",
                                            "default": "false"
                                        },
                                        "application": {
                                            "type": "object",
                                            "properties": {
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "permissionOverwrite": {
                                                                "type": "boolean"
                                                            },
                                                            "attributesOverwrite": {
                                                                "type": "object",
                                                                "required": [
                                                                    "key"
                                                                ],
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "tempore"
                                                                    },
                                                                    "value": {
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "Encourage"
                                                }
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Organization",
                                                            "OrgType"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NitzscheandSons"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Active",
                                                            "Inactive",
                                                            "Pending"
                                                        ],
                                                        "example": "Pending"
                                                    },
                                                    "sfAccountId": {
                                                        "type": "string",
                                                        "example": "0016000000ImzzJAAR"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "003422"
                                                    },
                                                    "actCode": {
                                                        "type": "string",
                                                        "example": "0011"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "programs": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "group": {},
                                                    "parent": {},
                                                    "creator": {},
                                                    "users": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "applications": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "tempore"
                                                                },
                                                                "value": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/{uid}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Finds an Encourage User by UID",
                "description": "Returns a single user by its UID",
                "operationId": "readUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "creator": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                }
                                            }
                                        },
                                        "versionWarning": {
                                            "type": "boolean",
                                            "example": "false",
                                            "default": "false"
                                        },
                                        "application": {
                                            "type": "object",
                                            "properties": {
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "permissionOverwrite": {
                                                                "type": "boolean"
                                                            },
                                                            "attributesOverwrite": {
                                                                "type": "object",
                                                                "required": [
                                                                    "key"
                                                                ],
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "tempore"
                                                                    },
                                                                    "value": {
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "Encourage"
                                                }
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Organization",
                                                            "OrgType"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NitzscheandSons"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Active",
                                                            "Inactive",
                                                            "Pending"
                                                        ],
                                                        "example": "Pending"
                                                    },
                                                    "sfAccountId": {
                                                        "type": "string",
                                                        "example": "0016000000ImzzJAAR"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "003422"
                                                    },
                                                    "actCode": {
                                                        "type": "string",
                                                        "example": "0011"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "programs": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "group": {},
                                                    "parent": {},
                                                    "creator": {},
                                                    "users": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "applications": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "tempore"
                                                                },
                                                                "value": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updates an Encourage User",
                "description": "Updates an user identified by UID. Parameters to be updated are provided in the requested body and correspond to the \n        fields described in user model. Valid user fields not shown in the model will be ignored in update (createAt, lastUpdated, ...). \n        All parameters are optional, but at least one parameter must be provided in the request body for the request to succeed. \n        The UID field can be provided but must match the one provided in path.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    },
                                    "cell_phone": {
                                        "type": "string",
                                        "example": "2025550152"
                                    },
                                    "fax_phone": {
                                        "type": "string",
                                        "example": "2025550152"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "creator": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                }
                                            }
                                        },
                                        "versionWarning": {
                                            "type": "boolean",
                                            "example": "false",
                                            "default": "false"
                                        },
                                        "application": {
                                            "type": "object",
                                            "properties": {
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "permissionOverwrite": {
                                                                "type": "boolean"
                                                            },
                                                            "attributesOverwrite": {
                                                                "type": "object",
                                                                "required": [
                                                                    "key"
                                                                ],
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "tempore"
                                                                    },
                                                                    "value": {
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "Encourage"
                                                }
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Organization",
                                                            "OrgType"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NitzscheandSons"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Active",
                                                            "Inactive",
                                                            "Pending"
                                                        ],
                                                        "example": "Pending"
                                                    },
                                                    "sfAccountId": {
                                                        "type": "string",
                                                        "example": "0016000000ImzzJAAR"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "003422"
                                                    },
                                                    "actCode": {
                                                        "type": "string",
                                                        "example": "0011"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "programs": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "group": {},
                                                    "parent": {},
                                                    "creator": {},
                                                    "users": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "applications": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "tempore"
                                                                },
                                                                "value": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Deletes an Encourage User",
                "description": "Sets an user as inactive in the database. Can't delete oneself.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messsage": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/{uid}/impersonate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Impersonate an Encourage User",
                "description": "Impersonate an user by its UID",
                "operationId": "impersonateUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Impersonation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "User",
                                                    "default": "User",
                                                    "enum": [
                                                        "LdapUser",
                                                        "Role",
                                                        "User"
                                                    ]
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                },
                                                "userName": {
                                                    "type": "string",
                                                    "example": "testUserName"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Active",
                                                    "enum": [
                                                        "Active",
                                                        "Inactive",
                                                        "Pending",
                                                        "Disabled"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@user.mail"
                                                },
                                                "verifiedDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "creator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        }
                                                    }
                                                },
                                                "versionWarning": {
                                                    "type": "boolean",
                                                    "example": "false",
                                                    "default": "false"
                                                },
                                                "application": {
                                                    "type": "object",
                                                    "properties": {
                                                        "modules": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "permissionOverwrite": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "attributesOverwrite": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string",
                                                                                "example": "tempore"
                                                                            },
                                                                            "value": {
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "key": {
                                                            "type": "string",
                                                            "example": "Encourage"
                                                        }
                                                    }
                                                },
                                                "organizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Organization",
                                                                    "OrgType"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Active",
                                                                    "Inactive",
                                                                    "Pending"
                                                                ],
                                                                "example": "Pending"
                                                            },
                                                            "sfAccountId": {
                                                                "type": "string",
                                                                "example": "0016000000ImzzJAAR"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "003422"
                                                            },
                                                            "actCode": {
                                                                "type": "string",
                                                                "example": "0011"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "programs": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "group": {},
                                                            "parent": {},
                                                            "creator": {},
                                                            "users": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "key"
                                                                    ],
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string",
                                                                            "example": "tempore"
                                                                        },
                                                                        "value": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                            },
                                                            "roleName": {
                                                                "type": "string",
                                                                "example": "Administrator"
                                                            }
                                                        }
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "tempore"
                                                            },
                                                            "value": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "impersonatingUser": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "User",
                                                    "default": "User",
                                                    "enum": [
                                                        "LdapUser",
                                                        "Role",
                                                        "User"
                                                    ]
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                },
                                                "userName": {
                                                    "type": "string",
                                                    "example": "testUserName"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Active",
                                                    "enum": [
                                                        "Active",
                                                        "Inactive",
                                                        "Pending",
                                                        "Disabled"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@user.mail"
                                                },
                                                "verifiedDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "creator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        }
                                                    }
                                                },
                                                "versionWarning": {
                                                    "type": "boolean",
                                                    "example": "false",
                                                    "default": "false"
                                                },
                                                "application": {
                                                    "type": "object",
                                                    "properties": {
                                                        "modules": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "permissionOverwrite": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "attributesOverwrite": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string",
                                                                                "example": "tempore"
                                                                            },
                                                                            "value": {
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "key": {
                                                            "type": "string",
                                                            "example": "Encourage"
                                                        }
                                                    }
                                                },
                                                "organizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Organization",
                                                                    "OrgType"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Active",
                                                                    "Inactive",
                                                                    "Pending"
                                                                ],
                                                                "example": "Pending"
                                                            },
                                                            "sfAccountId": {
                                                                "type": "string",
                                                                "example": "0016000000ImzzJAAR"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "003422"
                                                            },
                                                            "actCode": {
                                                                "type": "string",
                                                                "example": "0011"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "programs": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "group": {},
                                                            "parent": {},
                                                            "creator": {},
                                                            "users": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "key"
                                                                    ],
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string",
                                                                            "example": "tempore"
                                                                        },
                                                                        "value": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                            },
                                                            "roleName": {
                                                                "type": "string",
                                                                "example": "Administrator"
                                                            }
                                                        }
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "tempore"
                                                            },
                                                            "value": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "sessionToken": {
                                            "type": "string",
                                            "format": "byte",
                                            "example": "Base64 string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No User with provided UID"
                    },
                    "400": {
                        "description": "Invalid UID"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Stops impersonating an Encourage User",
                "description": "Stops impersonating an user by its UID and JWT payload. JWT should be the same as the one \n        created in the POST impersonate route. An JWT obtained from the login route won't work on this route",
                "operationId": "stopImpersonateUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stopped impersonation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "User",
                                                    "default": "User",
                                                    "enum": [
                                                        "LdapUser",
                                                        "Role",
                                                        "User"
                                                    ]
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                },
                                                "userName": {
                                                    "type": "string",
                                                    "example": "testUserName"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Active",
                                                    "enum": [
                                                        "Active",
                                                        "Inactive",
                                                        "Pending",
                                                        "Disabled"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@user.mail"
                                                },
                                                "verifiedDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2019-01-07T18:29:25.493Z"
                                                },
                                                "creator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        }
                                                    }
                                                },
                                                "versionWarning": {
                                                    "type": "boolean",
                                                    "example": "false",
                                                    "default": "false"
                                                },
                                                "application": {
                                                    "type": "object",
                                                    "properties": {
                                                        "modules": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "permissionOverwrite": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "attributesOverwrite": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string",
                                                                                "example": "tempore"
                                                                            },
                                                                            "value": {
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "key": {
                                                            "type": "string",
                                                            "example": "Encourage"
                                                        }
                                                    }
                                                },
                                                "organizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Organization",
                                                                    "OrgType"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Active",
                                                                    "Inactive",
                                                                    "Pending"
                                                                ],
                                                                "example": "Pending"
                                                            },
                                                            "sfAccountId": {
                                                                "type": "string",
                                                                "example": "0016000000ImzzJAAR"
                                                            },
                                                            "externalId": {
                                                                "type": "string",
                                                                "example": "003422"
                                                            },
                                                            "actCode": {
                                                                "type": "string",
                                                                "example": "0011"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2017-06-21T16:36:08.039Z"
                                                            },
                                                            "programs": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "group": {},
                                                            "parent": {},
                                                            "creator": {},
                                                            "users": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {}
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "key"
                                                                    ],
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string",
                                                                            "example": "tempore"
                                                                        },
                                                                        "value": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                            },
                                                            "roleName": {
                                                                "type": "string",
                                                                "example": "Administrator"
                                                            }
                                                        }
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "tempore"
                                                            },
                                                            "value": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "sessionToken": {
                                            "type": "string",
                                            "format": "byte",
                                            "example": "Base64 string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No User with provided UID"
                    },
                    "400": {
                        "description": "Invalid UID"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Submits a new user support ticket",
                "description": "Sends an email to support, containing related high school and user data",
                "operationId": "userSignup",
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "email",
                                            "description",
                                            "title"
                                        ],
                                        "properties": {
                                            "firstName": {
                                                "type": "string",
                                                "example": "testUserFirstName"
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "example": "testUserLastName"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "test@user.mail"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "School Administrator",
                                                "enum": [
                                                    "school_administrator",
                                                    "school_counselor",
                                                    "parent_guardian",
                                                    "other_mentor"
                                                ]
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Principal"
                                            }
                                        }
                                    },
                                    "secondarySchool": {
                                        "type": "object",
                                        "required": [
                                            "name"
                                        ],
                                        "properties": {
                                            "hs_id": {
                                                "type": "string",
                                                "example": "HS021361"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Stanfield Johnson"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Stanfield"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "WA"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "3101 S Bagdad Rd"
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "www.school.com"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/{uid}/attributes": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updates an Encourage User's UMS attributes",
                "description": "Updates a user/'s attributes in UMS, identified by UID. Parameters to be updated are provided in the requested body and correspond to the \n        fields described in attributes model. Attributes in the payload must be a non-empty array.",
                "operationId": "updateUserAttributes",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "key"
                                    ],
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "tempore"
                                        },
                                        "value": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "creator": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                }
                                            }
                                        },
                                        "versionWarning": {
                                            "type": "boolean",
                                            "example": "false",
                                            "default": "false"
                                        },
                                        "application": {
                                            "type": "object",
                                            "properties": {
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "permissionOverwrite": {
                                                                "type": "boolean"
                                                            },
                                                            "attributesOverwrite": {
                                                                "type": "object",
                                                                "required": [
                                                                    "key"
                                                                ],
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "tempore"
                                                                    },
                                                                    "value": {
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "Encourage"
                                                }
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Organization",
                                                            "OrgType"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NitzscheandSons"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Active",
                                                            "Inactive",
                                                            "Pending"
                                                        ],
                                                        "example": "Pending"
                                                    },
                                                    "sfAccountId": {
                                                        "type": "string",
                                                        "example": "0016000000ImzzJAAR"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "003422"
                                                    },
                                                    "actCode": {
                                                        "type": "string",
                                                        "example": "0011"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "programs": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "group": {},
                                                    "parent": {},
                                                    "creator": {},
                                                    "users": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "applications": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "tempore"
                                                                },
                                                                "value": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/{uid}/activate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Activate Educator",
                "description": "Activate an educator account",
                "operationId": "activateEducator",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "acceptedTerms",
                                    "contactId",
                                    "password",
                                    "email"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    },
                                    "acceptedTerms": {
                                        "type": "boolean"
                                    },
                                    "contactId": {
                                        "type": "string",
                                        "example": "HC123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "P@ssw0rd"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "test@email.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{uid}/setup-mco-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Sets up the Encourage User's MCO data from a UMS user.",
                "description": "[LDAP ONLY] An Encourage user is composed by multiple parts, one of them being in MCO. This uses existing UMS data to set up\n        the MCO part of a user in AWS DB and EncourageDB.\n        One use case for this is finishing users that have been created from the Migrator Lambdas or directly in UMS.",
                "operationId": "setupMcoUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    },
                                    "prefix": {
                                        "type": "string",
                                        "example": "Mr."
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "creator": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                }
                                            }
                                        },
                                        "versionWarning": {
                                            "type": "boolean",
                                            "example": "false",
                                            "default": "false"
                                        },
                                        "application": {
                                            "type": "object",
                                            "properties": {
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "permissionOverwrite": {
                                                                "type": "boolean"
                                                            },
                                                            "attributesOverwrite": {
                                                                "type": "object",
                                                                "required": [
                                                                    "key"
                                                                ],
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "tempore"
                                                                    },
                                                                    "value": {
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "Encourage"
                                                }
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Organization",
                                                            "OrgType"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NitzscheandSons"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Active",
                                                            "Inactive",
                                                            "Pending"
                                                        ],
                                                        "example": "Pending"
                                                    },
                                                    "sfAccountId": {
                                                        "type": "string",
                                                        "example": "0016000000ImzzJAAR"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "003422"
                                                    },
                                                    "actCode": {
                                                        "type": "string",
                                                        "example": "0011"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2017-06-21T16:36:08.039Z"
                                                    },
                                                    "programs": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "group": {},
                                                    "parent": {},
                                                    "creator": {},
                                                    "users": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "applications": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "tempore"
                                                                },
                                                                "value": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/{uid}/pre-activate-educator": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Pre-activate Educator users coming from the Migrator lambdas and assign them a random password.",
                "description": "[LDAP ONLY] For a user that has been created from the Migrator Lambdas or directly in UMS, and is Pending,\n        this route will do the following:<br>\n        - set up the user as Active and with terms accepted in UMS<br>\n        - define a random generated password",
                "operationId": "preActivateEducator",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/contact/{contactId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a User's status by contact id",
                "description": "Returns a user's status and email given its contact_id external Id",
                "operationId": "getUserStatusByContactId",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The external ID, contact_id, of the educator contact",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/contact/{contactId}/generate-code": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Generates a verification code",
                "description": "For a user that has been created from the Migrator Lambdas or directly in UMS, and is Pending,\n        this route will generate a validation code and send an email containing it to the user",
                "operationId": "generateCode",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The external ID, contact_id, of the educator contact",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found for contact_id = {contact_id}"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/users/contact/{contactId}/validate-code": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Validate a verification code",
                "description": "Validates a verification code for a user that is trying to activate their account",
                "operationId": "validateCode",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The external ID, contact_id, of the educator contact",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "verificationCode": {
                                        "type": "string",
                                        "example": "111555"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "versionWarning": {
                                            "type": "boolean",
                                            "example": "false",
                                            "default": "false"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        },
                                        "schoolName": {
                                            "type": "string",
                                            "example": "NitzscheandSons",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/log": {
            "post": {
                "tags": [
                    "Logger"
                ],
                "summary": "Logs a message",
                "operationId": "log",
                "description": "Logs a message",
                "requestBody": {
                    "required": true,
                    "description": "Logger message, level, and metadata.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Generic warning message"
                                    },
                                    "level": {
                                        "type": "string",
                                        "example": "warn"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message successfully logged",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Generic warning message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/mentoring": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get MyStudents data for the EncourageUser's related students",
                "operationId": "getMentoringStudents",
                "description": "An Encourage User can have linked students in MyOptions and students related to administered survey programs \n        if the user is an educator. This route fetches student data related to MyStudents from those two sources.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1,
                            "maximum": 20
                        },
                        "required": false,
                        "description": "Size limit for returned array, max = 20"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    },
                    {
                        "in": "query",
                        "name": "gradYears",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "minItems": 1
                        },
                        "explode": false,
                        "required": false,
                        "description": "List of student graduation years for filtering"
                    },
                    {
                        "in": "query",
                        "name": "hsIds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "HS001234",
                                "HS054321"
                            ]
                        },
                        "explode": false,
                        "required": false,
                        "description": "List of MCO's HS IDs for filtering"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "string",
                            "example": "fieldName(asc),otherFieldName(desc)"
                        },
                        "required": false,
                        "description": "Specifies sorting and sort order by fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "student_key": {
                                                "type": "string",
                                                "example": "576173212",
                                                "description": "This is the primary key"
                                            },
                                            "sequence_number": {
                                                "type": "string",
                                                "example": "34653"
                                            },
                                            "last_activity_date": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2019-01-07T19:01:01.088Z"
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "UserFirstName"
                                            },
                                            "middle_name": {
                                                "type": "string",
                                                "example": "UserMiddleName"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "UserLastName"
                                            },
                                            "gender": {
                                                "type": "string",
                                                "example": "F"
                                            },
                                            "date_of_birth": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "1996-05-23T00:00:00.000Z"
                                            },
                                            "graduation_year": {
                                                "type": "integer",
                                                "example": 2018
                                            },
                                            "relationship_type_keys": {
                                                "type": "array",
                                                "example": [
                                                    8
                                                ]
                                            },
                                            "answers": {
                                                "type": "object",
                                                "example": {}
                                            },
                                            "checklist_items": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 27
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Checklist item title"
                                                        },
                                                        "deadline": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-09-24T01:38:17.690Z"
                                                        },
                                                        "high_school_grade": {
                                                            "type": "integer",
                                                            "minimum": 0,
                                                            "maximum": 4,
                                                            "example": 2
                                                        },
                                                        "semester": {
                                                            "type": "integer",
                                                            "minimum": 1,
                                                            "maximum": 2,
                                                            "example": 2
                                                        },
                                                        "status": {
                                                            "type": "integer",
                                                            "minimum": 0,
                                                            "maximum": 2,
                                                            "example": 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "EncourageUser not found in the database"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/mentoring/search": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Search in EncourageUser's related students",
                "operationId": "searchStudents",
                "description": "Searches through all the user's related student's by their full name.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "Stan"
                        },
                        "required": false,
                        "description": "Used for filtering results based on a search string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "student_key": {
                                                "type": "string",
                                                "example": "576173212",
                                                "description": "This is the primary key"
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "UserFirstName"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "UserLastName"
                                            },
                                            "graduation_year": {
                                                "type": "integer",
                                                "example": 2018
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/application-management/{hsId}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related application management students",
                "operationId": "getStudentAppMan",
                "description": "Get a student list with application status for the informed secondary school if the user has access to it",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "string",
                            "example": "fieldName(asc),otherFieldName(desc)"
                        },
                        "required": false,
                        "description": "Specifies sorting and sort order by fields"
                    },
                    {
                        "in": "query",
                        "name": "gradYears",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "minItems": 1
                        },
                        "explode": false,
                        "required": true,
                        "description": "List of student graduation years for filtering"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "student_key": {
                                                "type": "string",
                                                "example": "576173212",
                                                "description": "This is the primary key"
                                            },
                                            "sequence_number": {
                                                "type": "string",
                                                "example": "34653"
                                            },
                                            "last_activity_date": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2019-01-07T19:01:01.088Z"
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "UserFirstName"
                                            },
                                            "middle_name": {
                                                "type": "string",
                                                "example": "UserMiddleName"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "UserLastName"
                                            },
                                            "gender": {
                                                "type": "string",
                                                "example": "F"
                                            },
                                            "date_of_birth": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "1996-05-23T00:00:00.000Z"
                                            },
                                            "graduation_year": {
                                                "type": "integer",
                                                "example": 2018
                                            },
                                            "relationship_type_keys": {
                                                "type": "array",
                                                "example": [
                                                    8
                                                ]
                                            },
                                            "answers": {
                                                "type": "object",
                                                "properties": {
                                                    "ANSWER_1": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "ANSWER_2": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "ANSWER_n": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "is_approved": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_auto_login": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_active_login": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "address_1": {
                                                "type": "string",
                                                "example": "Street, 250"
                                            },
                                            "address_2": {
                                                "type": "string",
                                                "example": "Street, 250"
                                            },
                                            "zip": {
                                                "type": "string",
                                                "example": "111111"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "TX"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Austin"
                                            },
                                            "is_valid_address": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "cell_phone": {
                                                "type": "string",
                                                "example": "55511234"
                                            },
                                            "home_phone": {
                                                "type": "string",
                                                "example": "55511234"
                                            },
                                            "parents": {
                                                "type": "object",
                                                "properties": {
                                                    "one": {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": {
                                                                "type": "string",
                                                                "example": "string"
                                                            },
                                                            "first_name": {
                                                                "type": "string",
                                                                "example": "string"
                                                            },
                                                            "last_name": {
                                                                "type": "string",
                                                                "example": "string"
                                                            }
                                                        }
                                                    },
                                                    "two": {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": {
                                                                "type": "string",
                                                                "example": "string"
                                                            },
                                                            "first_name": {
                                                                "type": "string",
                                                                "example": "string"
                                                            },
                                                            "last_name": {
                                                                "type": "string",
                                                                "example": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "user_schools": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "student_key": {
                                                            "type": "string",
                                                            "example": "102482975"
                                                        },
                                                        "school_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "application_status_key": {
                                                            "type": "string",
                                                            "enum": [
                                                                "INITIAL",
                                                                "APPLYING_0",
                                                                "APPLYING_25",
                                                                "APPLYING_50",
                                                                "APPLYING_75",
                                                                "APPLIED",
                                                                "ACCEPTED",
                                                                "NOT_ACCEPTED",
                                                                "ENROLLING",
                                                                "NOT_ENROLLING",
                                                                "DEFERRED_WAITLISTED"
                                                            ]
                                                        },
                                                        "update_increment": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "is_bookmarked": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "is_declared": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "is_quickmatch": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "is_aos": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "application_status": {
                                                            "type": "string",
                                                            "example": "applying"
                                                        },
                                                        "applying_percent": {
                                                            "type": "integer",
                                                            "example": 75
                                                        },
                                                        "school": {
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "CollegeName"
                                                                },
                                                                "nickname": {
                                                                    "type": "string",
                                                                    "example": "CollegeNickname"
                                                                },
                                                                "fice": {
                                                                    "type": "string",
                                                                    "example": "1525134"
                                                                },
                                                                "ug_inst_id": {
                                                                    "type": "string",
                                                                    "example": "collegeinsta"
                                                                },
                                                                "ipeds_id": {
                                                                    "type": "string",
                                                                    "default": "234525"
                                                                },
                                                                "address_1": {
                                                                    "type": "string",
                                                                    "default": "CollegeAddress1"
                                                                },
                                                                "address_2": {
                                                                    "type": "string",
                                                                    "default": "CollegeAddress2"
                                                                },
                                                                "city": {
                                                                    "type": "string",
                                                                    "default": "CollegeCity"
                                                                },
                                                                "state": {
                                                                    "type": "string",
                                                                    "default": "CS"
                                                                },
                                                                "zip": {
                                                                    "type": "string",
                                                                    "default": "12345"
                                                                },
                                                                "country": {
                                                                    "type": "string",
                                                                    "default": "CollegeCountry"
                                                                },
                                                                "urls": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "M",
                                                                                    "I",
                                                                                    "S",
                                                                                    "A",
                                                                                    "B"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string",
                                                                                "example": "www.example.com"
                                                                            },
                                                                            "type_desc": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "Main",
                                                                                    "Inquiry",
                                                                                    "Schedule Visit",
                                                                                    "Apply",
                                                                                    "Admissions Blog"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "has_campus_image_1x1": {
                                                                    "type": "boolean"
                                                                },
                                                                "has_campus_image_16x9": {
                                                                    "type": "boolean"
                                                                },
                                                                "slug_name": {
                                                                    "type": "string",
                                                                    "example": "test-university-1"
                                                                },
                                                                "images": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "logo": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/logo.png"
                                                                        },
                                                                        "1x1_320": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "1x1_640": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "1x1_1076": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "1x1_1500": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "1x1_2048": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "16x9_320": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "16x9_640": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "16x9_1076": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "16x9_1500": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        },
                                                                        "16x9_2048": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "https://www.test.com/image.jpg"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid hsId"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/application-management/{hsId}/search": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Search user's related application management students",
                "operationId": "searchStudentAppMan",
                "description": "Get a list of students matching the search criteria",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "Stan"
                        },
                        "required": true,
                        "description": "Used for filtering results based on a search string"
                    },
                    {
                        "in": "query",
                        "name": "gradYears",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "minItems": 1
                        },
                        "explode": false,
                        "required": true,
                        "description": "List of student graduation years for filtering"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "student_key": {
                                                "type": "string",
                                                "example": "576173212",
                                                "description": "This is the primary key"
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "UserFirstName"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "UserLastName"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing search param"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentKey}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related student base MCO info",
                "operationId": "getStudent",
                "description": "Get a specific student's base info related to the user, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "student_key": {
                                            "type": "string",
                                            "example": "576173212",
                                            "description": "This is the primary key"
                                        },
                                        "entity_type_key": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "sequence_number": {
                                            "type": "string",
                                            "example": "34653"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "user@ma.il"
                                        },
                                        "last_activity_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T19:01:01.088Z"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "user@ma.il"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "UserFirstName"
                                        },
                                        "middle_name": {
                                            "type": "string",
                                            "example": "UserMiddleName"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "UserLastName"
                                        },
                                        "gender": {
                                            "type": "string",
                                            "example": "F"
                                        },
                                        "date_of_birth": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "1996-05-23T00:00:00.000Z"
                                        },
                                        "graduation_year": {
                                            "type": "integer",
                                            "example": 2018
                                        },
                                        "high_school": {
                                            "type": "object",
                                            "properties": {
                                                "hs_id": {
                                                    "type": "string",
                                                    "example": "userHighSchoolId"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "userHighSchoolName"
                                                }
                                            }
                                        },
                                        "relationship_type_keys": {
                                            "type": "array",
                                            "example": [
                                                8
                                            ]
                                        },
                                        "answers": {
                                            "type": "object",
                                            "example": {}
                                        },
                                        "is_approved": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_auto_login": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_active_login": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "address_1": {
                                            "type": "string",
                                            "example": "Street, 250"
                                        },
                                        "address_2": {
                                            "type": "string",
                                            "example": "Street, 250"
                                        },
                                        "zip": {
                                            "type": "string",
                                            "example": "111111"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "TX"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Austin"
                                        },
                                        "is_valid_address": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "cell_phone": {
                                            "type": "string",
                                            "example": "55511234"
                                        },
                                        "home_phone": {
                                            "type": "string",
                                            "example": "55511234"
                                        },
                                        "parents": {
                                            "type": "object",
                                            "properties": {
                                                "one": {
                                                    "type": "object",
                                                    "properties": {
                                                        "email": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "string"
                                                        }
                                                    }
                                                },
                                                "two": {
                                                    "type": "object",
                                                    "properties": {
                                                        "email": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/application-management": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related student application management details info",
                "operationId": "getStudentAppManDetails",
                "description": "Get application management details for the informed student if the user has access to the same school as the student.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "string",
                            "example": "fieldName(asc),otherFieldName(desc)"
                        },
                        "required": false,
                        "description": "Specifies sorting and sort order by fields"
                    },
                    {
                        "name": "collegeId",
                        "in": "query",
                        "description": "Unique ID (mcocid) for MCO college",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Cache-Control",
                        "in": "header",
                        "description": "Informs the service that it should skip cache reading (no-cache), writing (no-store) or both in this request",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no-cache",
                                "no-store",
                                "no-cache no-store"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "student": {
                                            "type": "object",
                                            "properties": {
                                                "student_key": {
                                                    "type": "string",
                                                    "example": "576173212",
                                                    "description": "This is the primary key"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "UserFirstName"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "UserLastName"
                                                }
                                            }
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "student_key": {
                                                        "type": "string",
                                                        "example": "102482975"
                                                    },
                                                    "school_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "application_status_key": {
                                                        "type": "string",
                                                        "enum": [
                                                            "APPLYING_0",
                                                            "APPLYING_25",
                                                            "APPLYING_50",
                                                            "APPLYING_75",
                                                            "APPLIED",
                                                            "ACCEPTED",
                                                            "NOT_ACCEPTED",
                                                            "ENROLLING",
                                                            "NOT_ENROLLING",
                                                            "DEFERRED_WAITLISTED"
                                                        ]
                                                    },
                                                    "update_increment": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_bookmarked": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_declared": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_quickmatch": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_aos": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "application_status": {
                                                        "type": "string",
                                                        "example": "applying"
                                                    },
                                                    "applying_percent": {
                                                        "type": "integer",
                                                        "example": 75
                                                    },
                                                    "school": {
                                                        "type": "object",
                                                        "properties": {
                                                            "urls": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "main": {
                                                                        "type": "string",
                                                                        "example": "https://www.test.com"
                                                                    },
                                                                    "inquiry": {
                                                                        "type": "string",
                                                                        "example": "https://www.test.com"
                                                                    },
                                                                    "schedule_visit": {
                                                                        "type": "string",
                                                                        "example": "https://www.test.com"
                                                                    },
                                                                    "admissions_blog": {
                                                                        "type": "string",
                                                                        "example": "https://www.test.com"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "credentials": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "uid": {
                                                                    "type": "string",
                                                                    "example": "xxxx-xxxx-xxxx-xxxx",
                                                                    "description": "This is the primary key"
                                                                },
                                                                "export_id": {
                                                                    "type": "string",
                                                                    "example": "xxxx-xxxx-xxxx-xxxx"
                                                                },
                                                                "credential_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "final-transcript",
                                                                        "interim-transcript",
                                                                        "recommendation",
                                                                        "application-essay",
                                                                        "fee-waiver",
                                                                        "personal-statement",
                                                                        "portfolio-manuscript",
                                                                        "resume",
                                                                        "other"
                                                                    ]
                                                                },
                                                                "submitted_at": {
                                                                    "type": "string",
                                                                    "example": "1558984276791"
                                                                },
                                                                "first_export_date": {
                                                                    "type": "string",
                                                                    "example": "1558984276791"
                                                                },
                                                                "removed_by": {
                                                                    "type": "string",
                                                                    "example": "removedBy"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "externalCredential": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "xxxx-xxxx-xxxx-xxxx",
                                                                "description": "This is the primary key"
                                                            },
                                                            "studentKey": {
                                                                "type": "string",
                                                                "example": "15556777"
                                                            },
                                                            "fice": {
                                                                "type": "string",
                                                                "example": "123778"
                                                            },
                                                            "submissionDate": {
                                                                "type": "string",
                                                                "example": "1558984276791"
                                                            },
                                                            "submittedBy": {
                                                                "type": "string",
                                                                "example": "xxxx-xxxx-xxxx-xxxx"
                                                            },
                                                            "removed_by": {
                                                                "type": "string",
                                                                "example": "removedBy"
                                                            }
                                                        }
                                                    },
                                                    "isSupported": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/checklist": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related student checklist items",
                "operationId": "getStudentChecklist",
                "description": "Get a specific student's checklist items, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 27
                                            },
                                            "is_visible": {
                                                "type": "boolean",
                                                "default": false,
                                                "example": true
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Checklist item title"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Checklist item description"
                                            },
                                            "link": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://some.link.here"
                                            },
                                            "deadline": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-09-24T01:38:17.690Z"
                                            },
                                            "high_school_grade": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 4,
                                                "example": 2
                                            },
                                            "semester": {
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 2,
                                                "example": 2
                                            },
                                            "is_athlete": {
                                                "type": "boolean",
                                                "default": false,
                                                "example": true
                                            },
                                            "is_first_gen": {
                                                "type": "boolean",
                                                "default": false,
                                                "example": false
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-04-24T01:38:17.690Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-06-28T03:34:54.191Z"
                                            },
                                            "deleted_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "status": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 2,
                                                "example": 1
                                            },
                                            "status_updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-06-28T03:34:54.191Z"
                                            },
                                            "personal_notes": {
                                                "type": "string",
                                                "example": "Checklist item personal notes"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/test-scores": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related student test scores",
                "operationId": "getStudentTestScores",
                "description": "Get a specific student's test scores, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "gpa": {
                                            "type": "object",
                                            "properties": {
                                                "total_score": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "minimum": 0,
                                                    "maximum": 4,
                                                    "example": 3.9
                                                },
                                                "min_total_score": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "max_total_score": {
                                                    "type": "number",
                                                    "example": 4
                                                }
                                            }
                                        },
                                        "act": {
                                            "type": "object",
                                            "properties": {
                                                "english": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 36,
                                                    "example": 34
                                                },
                                                "math": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 36,
                                                    "example": 34
                                                },
                                                "reading": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 36,
                                                    "example": 34
                                                },
                                                "science": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 36,
                                                    "example": 34
                                                },
                                                "total_score": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 36,
                                                    "example": 34
                                                },
                                                "min_score": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "max_score": {
                                                    "type": "number",
                                                    "example": 35
                                                },
                                                "min_total_score": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "max_total_score": {
                                                    "type": "number",
                                                    "example": 35
                                                }
                                            }
                                        },
                                        "sat": {
                                            "type": "object",
                                            "properties": {
                                                "math": {
                                                    "type": "number",
                                                    "minimum": 200,
                                                    "maximum": 800,
                                                    "example": 700
                                                },
                                                "reading_writing": {
                                                    "type": "number",
                                                    "minimum": 200,
                                                    "maximum": 800,
                                                    "example": 700
                                                },
                                                "total_score": {
                                                    "type": "number",
                                                    "minimum": 1500,
                                                    "maximum": 400,
                                                    "example": 1600
                                                },
                                                "min_score": {
                                                    "type": "number",
                                                    "example": 200
                                                },
                                                "max_score": {
                                                    "type": "number",
                                                    "example": 800
                                                },
                                                "min_total_score": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "max_total_score": {
                                                    "type": "number",
                                                    "example": 1600
                                                }
                                            }
                                        },
                                        "psat": {
                                            "type": "object",
                                            "properties": {
                                                "math": {
                                                    "type": "number",
                                                    "minimum": 200,
                                                    "maximum": 800,
                                                    "example": 700
                                                },
                                                "reading_writing": {
                                                    "type": "number",
                                                    "minimum": 200,
                                                    "maximum": 800,
                                                    "example": 700
                                                },
                                                "total_score": {
                                                    "type": "number",
                                                    "minimum": 1500,
                                                    "maximum": 400,
                                                    "example": 1600
                                                },
                                                "min_score": {
                                                    "type": "number",
                                                    "example": 200
                                                },
                                                "max_score": {
                                                    "type": "number",
                                                    "example": 800
                                                },
                                                "min_total_score": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "max_total_score": {
                                                    "type": "number",
                                                    "example": 1600
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/survey-answers": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related student survey answers",
                "operationId": "getStudentSurveyAnswers",
                "description": "Get a specific student's survey answers related to the user, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "surveyYear",
                        "schema": {
                            "type": "number",
                            "example": 2020
                        },
                        "required": true,
                        "description": "MCO's Survey Year"
                    },
                    {
                        "in": "query",
                        "name": "editions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "mco",
                                    "mop"
                                ]
                            },
                            "example": [
                                "mco",
                                "mop"
                            ]
                        },
                        "required": false,
                        "description": "Survey editions"
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ANSWER_1": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "ANSWER_2": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "ANSWER_n": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/application-status": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user related student's college application status",
                "operationId": "getStudentAppStatus",
                "description": "Get a specific student's college application status, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "student_key": {
                                                "type": "string",
                                                "example": "102482975"
                                            },
                                            "school_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "application_status_key": {
                                                "type": "string",
                                                "enum": [
                                                    "INITIAL",
                                                    "APPLYING_0",
                                                    "APPLYING_25",
                                                    "APPLYING_50",
                                                    "APPLYING_75",
                                                    "APPLIED",
                                                    "ACCEPTED",
                                                    "NOT_ACCEPTED",
                                                    "ENROLLING",
                                                    "NOT_ENROLLING",
                                                    "DEFERRED_WAITLISTED"
                                                ]
                                            },
                                            "update_increment": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "is_bookmarked": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_declared": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_quickmatch": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "is_aos": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "application_status": {
                                                "type": "string",
                                                "example": "applying"
                                            },
                                            "applying_percent": {
                                                "type": "integer",
                                                "example": 75
                                            },
                                            "school": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "CollegeName"
                                                    },
                                                    "nickname": {
                                                        "type": "string",
                                                        "example": "CollegeNickname"
                                                    },
                                                    "fice": {
                                                        "type": "string",
                                                        "example": "1525134"
                                                    },
                                                    "ug_inst_id": {
                                                        "type": "string",
                                                        "example": "collegeinsta"
                                                    },
                                                    "ipeds_id": {
                                                        "type": "string",
                                                        "default": "234525"
                                                    },
                                                    "address_1": {
                                                        "type": "string",
                                                        "default": "CollegeAddress1"
                                                    },
                                                    "address_2": {
                                                        "type": "string",
                                                        "default": "CollegeAddress2"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "default": "CollegeCity"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "default": "CS"
                                                    },
                                                    "zip": {
                                                        "type": "string",
                                                        "default": "12345"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "default": "CollegeCountry"
                                                    },
                                                    "urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "M",
                                                                        "I",
                                                                        "S",
                                                                        "A",
                                                                        "B"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "www.example.com"
                                                                },
                                                                "type_desc": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Main",
                                                                        "Inquiry",
                                                                        "Schedule Visit",
                                                                        "Apply",
                                                                        "Admissions Blog"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "has_campus_image_1x1": {
                                                        "type": "boolean"
                                                    },
                                                    "has_campus_image_16x9": {
                                                        "type": "boolean"
                                                    },
                                                    "slug_name": {
                                                        "type": "string",
                                                        "example": "test-university-1"
                                                    },
                                                    "images": {
                                                        "type": "object",
                                                        "properties": {
                                                            "logo": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/logo.png"
                                                            },
                                                            "1x1_320": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_640": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_1076": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_1500": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_2048": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_320": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_640": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_1076": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_1500": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_2048": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/colleges": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's colleges",
                "operationId": "getStudentColleges",
                "description": "Get a specific student's colleges, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "matched_colleges": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "mcocid": {
                                                        "type": "integer",
                                                        "example": 792
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "CollegeName"
                                                    },
                                                    "nickname": {
                                                        "type": "string",
                                                        "example": "CollegeNickname"
                                                    },
                                                    "fice": {
                                                        "type": "string",
                                                        "example": "1525134"
                                                    },
                                                    "ug_inst_id": {
                                                        "type": "string",
                                                        "example": "collegeinsta"
                                                    },
                                                    "ipeds_id": {
                                                        "type": "string",
                                                        "default": "234525"
                                                    },
                                                    "address_1": {
                                                        "type": "string",
                                                        "default": "CollegeAddress1"
                                                    },
                                                    "address_2": {
                                                        "type": "string",
                                                        "default": "CollegeAddress2"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "default": "CollegeCity"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "default": "CS"
                                                    },
                                                    "zip": {
                                                        "type": "string",
                                                        "default": "12345"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "default": "CollegeCountry"
                                                    },
                                                    "urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "M",
                                                                        "I",
                                                                        "S",
                                                                        "A",
                                                                        "B"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "www.example.com"
                                                                },
                                                                "type_desc": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Main",
                                                                        "Inquiry",
                                                                        "Schedule Visit",
                                                                        "Apply",
                                                                        "Admissions Blog"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "declared_colleges": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "mcocid": {
                                                        "type": "integer",
                                                        "example": 792
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "CollegeName"
                                                    },
                                                    "nickname": {
                                                        "type": "string",
                                                        "example": "CollegeNickname"
                                                    },
                                                    "fice": {
                                                        "type": "string",
                                                        "example": "1525134"
                                                    },
                                                    "ug_inst_id": {
                                                        "type": "string",
                                                        "example": "collegeinsta"
                                                    },
                                                    "ipeds_id": {
                                                        "type": "string",
                                                        "default": "234525"
                                                    },
                                                    "address_1": {
                                                        "type": "string",
                                                        "default": "CollegeAddress1"
                                                    },
                                                    "address_2": {
                                                        "type": "string",
                                                        "default": "CollegeAddress2"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "default": "CollegeCity"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "default": "CS"
                                                    },
                                                    "zip": {
                                                        "type": "string",
                                                        "default": "12345"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "default": "CollegeCountry"
                                                    },
                                                    "urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "M",
                                                                        "I",
                                                                        "S",
                                                                        "A",
                                                                        "B"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "www.example.com"
                                                                },
                                                                "type_desc": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Main",
                                                                        "Inquiry",
                                                                        "Schedule Visit",
                                                                        "Apply",
                                                                        "Admissions Blog"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "aos_colleges": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "mcocid": {
                                                        "type": "integer",
                                                        "example": 792
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "CollegeName"
                                                    },
                                                    "nickname": {
                                                        "type": "string",
                                                        "example": "CollegeNickname"
                                                    },
                                                    "fice": {
                                                        "type": "string",
                                                        "example": "1525134"
                                                    },
                                                    "ug_inst_id": {
                                                        "type": "string",
                                                        "example": "collegeinsta"
                                                    },
                                                    "ipeds_id": {
                                                        "type": "string",
                                                        "default": "234525"
                                                    },
                                                    "address_1": {
                                                        "type": "string",
                                                        "default": "CollegeAddress1"
                                                    },
                                                    "address_2": {
                                                        "type": "string",
                                                        "default": "CollegeAddress2"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "default": "CollegeCity"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "default": "CS"
                                                    },
                                                    "zip": {
                                                        "type": "string",
                                                        "default": "12345"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "default": "CollegeCountry"
                                                    },
                                                    "urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "M",
                                                                        "I",
                                                                        "S",
                                                                        "A",
                                                                        "B"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "www.example.com"
                                                                },
                                                                "type_desc": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Main",
                                                                        "Inquiry",
                                                                        "Schedule Visit",
                                                                        "Apply",
                                                                        "Admissions Blog"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "bookmarked_colleges": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "CollegeName"
                                                    },
                                                    "nickname": {
                                                        "type": "string",
                                                        "example": "CollegeNickname"
                                                    },
                                                    "fice": {
                                                        "type": "string",
                                                        "example": "1525134"
                                                    },
                                                    "ug_inst_id": {
                                                        "type": "string",
                                                        "example": "collegeinsta"
                                                    },
                                                    "ipeds_id": {
                                                        "type": "string",
                                                        "default": "234525"
                                                    },
                                                    "address_1": {
                                                        "type": "string",
                                                        "default": "CollegeAddress1"
                                                    },
                                                    "address_2": {
                                                        "type": "string",
                                                        "default": "CollegeAddress2"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "default": "CollegeCity"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "default": "CS"
                                                    },
                                                    "zip": {
                                                        "type": "string",
                                                        "default": "12345"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "default": "CollegeCountry"
                                                    },
                                                    "urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "M",
                                                                        "I",
                                                                        "S",
                                                                        "A",
                                                                        "B"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "www.example.com"
                                                                },
                                                                "type_desc": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Main",
                                                                        "Inquiry",
                                                                        "Schedule Visit",
                                                                        "Apply",
                                                                        "Admissions Blog"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "has_campus_image_1x1": {
                                                        "type": "boolean"
                                                    },
                                                    "has_campus_image_16x9": {
                                                        "type": "boolean"
                                                    },
                                                    "slug_name": {
                                                        "type": "string",
                                                        "example": "test-university-1"
                                                    },
                                                    "images": {
                                                        "type": "object",
                                                        "properties": {
                                                            "logo": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/logo.png"
                                                            },
                                                            "1x1_320": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_640": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_1076": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_1500": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "1x1_2048": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_320": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_640": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_1076": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_1500": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            },
                                                            "16x9_2048": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://www.test.com/image.jpg"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/scholarships": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a user's related student scholarships",
                "operationId": "getStudentScholarships",
                "description": "Get a specific student's scholarships, searching by its key and checking by relationship type.",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relationshipTypes",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mentoring",
                                "counseling"
                            ]
                        },
                        "required": false,
                        "description": "Parameter to filter results based on the relationship type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "AMOUNT": {
                                                "type": "string",
                                                "example": "$1,000-$12,500"
                                            },
                                            "DEADLINE": {
                                                "type": "string",
                                                "example": "November 5"
                                            },
                                            "PATRON_NM": {
                                                "type": "string",
                                                "example": "U.S. Bank"
                                            },
                                            "SCHOL_NM": {
                                                "type": "string",
                                                "example": "U.S. Bank Scholarship Programme"
                                            },
                                            "SORT_YEAR": {
                                                "type": "integer",
                                                "example": 2019
                                            },
                                            "S_UUID": {
                                                "type": "string",
                                                "example": "EC15DE51-5323-063F-5ED1551B4543BB44"
                                            },
                                            "WEB_AMT": {
                                                "type": "integer",
                                                "example": 1250
                                            },
                                            "WEB_DAY": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "WEB_MO": {
                                                "type": "integer",
                                                "example": 11
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid studentKey"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/colleges/{collegeFice}/credentials": {
            "post": {
                "tags": [
                    "Credentials"
                ],
                "summary": "Add a new or replace student's credential to college",
                "operationId": "createCredential",
                "description": "Add or replace a student's credential to a specific college",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collegeFice",
                        "in": "path",
                        "description": "Unique ID for college",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "credentialToReplaceUid": {
                                        "type": "string",
                                        "example": "xxxx-xxx-xxxx-xxx"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "final-transcript",
                                        "enum": [
                                            "final-transcript",
                                            "interim-transcript",
                                            "recommendation",
                                            "application-essay",
                                            "fee-waiver",
                                            "personal-statement",
                                            "portfolio-manuscript",
                                            "resume",
                                            "other"
                                        ]
                                    },
                                    "displayName": {
                                        "type": "string",
                                        "example": "example.pdf"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "credential": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "xxxx-xxxx-xxxx-xxxx",
                                                    "description": "This is the primary key"
                                                },
                                                "export_id": {
                                                    "type": "string",
                                                    "example": "xxxx-xxxx-xxxx-xxxx"
                                                },
                                                "credential_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "final-transcript",
                                                        "interim-transcript",
                                                        "recommendation",
                                                        "application-essay",
                                                        "fee-waiver",
                                                        "personal-statement",
                                                        "portfolio-manuscript",
                                                        "resume",
                                                        "other"
                                                    ]
                                                },
                                                "submitted_at": {
                                                    "type": "string",
                                                    "example": "1558984276791"
                                                },
                                                "first_export_date": {
                                                    "type": "string",
                                                    "example": "1558984276791"
                                                },
                                                "removed_by": {
                                                    "type": "string",
                                                    "example": "removedBy"
                                                },
                                                "file": {
                                                    "type": "object",
                                                    "example": {
                                                        "display_name": "displayName"
                                                    }
                                                }
                                            }
                                        },
                                        "upload_url": {
                                            "type": "string",
                                            "example": "uploadUrl"
                                        },
                                        "upload_fields": {
                                            "type": "object",
                                            "properties": {
                                                "fieldKey": {
                                                    "type": "string",
                                                    "example": "fieldValue"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            },
            "get": {
                "tags": [
                    "Credentials"
                ],
                "summary": "Get a student's credentials for a specific college",
                "operationId": "getCredentials",
                "description": "Get a student's credentials for a specific college",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collegeFice",
                        "in": "path",
                        "description": "Unique ID for college",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "uid": {
                                                "type": "string",
                                                "example": "xxxx-xxxx-xxxx-xxxx",
                                                "description": "This is the primary key"
                                            },
                                            "export_id": {
                                                "type": "string",
                                                "example": "xxxx-xxxx-xxxx-xxxx"
                                            },
                                            "credential_type": {
                                                "type": "string",
                                                "enum": [
                                                    "final-transcript",
                                                    "interim-transcript",
                                                    "recommendation",
                                                    "application-essay",
                                                    "fee-waiver",
                                                    "personal-statement",
                                                    "portfolio-manuscript",
                                                    "resume",
                                                    "other"
                                                ]
                                            },
                                            "submitted_at": {
                                                "type": "string",
                                                "example": "1558984276791"
                                            },
                                            "first_export_date": {
                                                "type": "string",
                                                "example": "1558984276791"
                                            },
                                            "removed_by": {
                                                "type": "string",
                                                "example": "removedBy"
                                            },
                                            "file": {
                                                "type": "object",
                                                "example": {
                                                    "display_name": "displayName"
                                                }
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "http://credential.url.org/credentialidonaremotebucketthatcanbeanything"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/credentials/{credUid}": {
            "post": {
                "tags": [
                    "Credentials"
                ],
                "summary": "Export a student's credential",
                "operationId": "exportCredentials",
                "description": "Export a specific student's credentials",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credUid",
                        "in": "path",
                        "description": "Credential unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "xxxx-xxxx-xxxx-xxxx",
                                            "description": "This is the primary key"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "http://credential.url.org/credentialidonaremotebucketthatcanbeanything"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Credentials"
                ],
                "summary": "Delete a student's credential",
                "operationId": "deleteCredentials",
                "description": "Delete a specific student's credentials",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credUid",
                        "in": "path",
                        "description": "Credential unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "schema": {
                            "type": "string",
                            "example": "reason"
                        },
                        "description": "Text containing the reason to delete a credential"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/students/{studentkey}/external-credentials/colleges/{collegeId}": {
            "put": {
                "tags": [
                    "External Credentials"
                ],
                "summary": "Manual submission date",
                "operationId": "createOrUpdateExternalCredential",
                "description": "Create or update an External Credential when manually setting the credential submission date for a college",
                "parameters": [
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collegeId",
                        "in": "path",
                        "description": "Unique ID (mcocid) for MCO college",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "submissionDate"
                                ],
                                "properties": {
                                    "submissionDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-04-30T12:00:00.000Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    }
                }
            }
        },
        "/high-schools/search": {
            "get": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Search secondary schools",
                "operationId": "searchSecondarySchools",
                "description": "Get a list of secondary schools given search parameters.This route has different behaviours depending on authentication provided: <br>An authenticated LDAP user or a request without an Authorization Header can access all secondary schools. <br>An authenticated user can only access secondary schools he is associated with.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "Stan"
                        },
                        "required": false,
                        "description": "Used for filtering results based on a search string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    },
                    {
                        "name": "Cache-Control",
                        "in": "header",
                        "description": "Informs the service that it should skip cache reading (no-cache), writing (no-store) or both in this request",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no-cache",
                                "no-store",
                                "no-cache no-store"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "hs_id",
                                            "name",
                                            "city",
                                            "state"
                                        ],
                                        "properties": {
                                            "hs_id": {
                                                "type": "string",
                                                "example": "HS021361"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Stanfield Johnson"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Stanfield"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "WA"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "3101 S Bagdad Rd"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/high-schools/{hsId}": {
            "get": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Get secondary school",
                "operationId": "getSecondarySchool",
                "description": "Gets a secondary school by ID. Only LDAP users can get school information.",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hs_id": {
                                            "type": "string",
                                            "example": "HS021361"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Stanfield Johnson"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Stanfield"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "WA"
                                        },
                                        "address_1": {
                                            "type": "string",
                                            "example": "3101 S Bagdad Rd"
                                        },
                                        "address_2": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "zip": {
                                            "type": "string",
                                            "example": "11222"
                                        },
                                        "zip4": {
                                            "type": "string",
                                            "example": "2328"
                                        },
                                        "usps_address_1": {
                                            "type": "string",
                                            "example": "3101 S Bagdad Rd"
                                        },
                                        "usps_address_2": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "usps_city": {
                                            "type": "string",
                                            "example": "Brooklyn"
                                        },
                                        "usps_state": {
                                            "type": "string",
                                            "example": "NY"
                                        },
                                        "usps_zip": {
                                            "type": "string",
                                            "example": "11222"
                                        },
                                        "district": {
                                            "type": "object",
                                            "properties": {
                                                "hs_id": {
                                                    "type": "string",
                                                    "example": "HS021361"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Stanfield Johnson"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Stanfield"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "WA"
                                                },
                                                "address_1": {
                                                    "type": "string",
                                                    "example": "3101 S Bagdad Rd"
                                                },
                                                "address_2": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "zip": {
                                                    "type": "string",
                                                    "example": "11222"
                                                },
                                                "zip4": {
                                                    "type": "string",
                                                    "example": "2328"
                                                },
                                                "usps_address_1": {
                                                    "type": "string",
                                                    "example": "3101 S Bagdad Rd"
                                                },
                                                "usps_address_2": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "usps_city": {
                                                    "type": "string",
                                                    "example": "Brooklyn"
                                                },
                                                "usps_state": {
                                                    "type": "string",
                                                    "example": "NY"
                                                },
                                                "usps_zip": {
                                                    "type": "string",
                                                    "example": "11222"
                                                }
                                            }
                                        },
                                        "permissions": {
                                            "type": "object",
                                            "properties": {
                                                "reportACTE": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportACTFL": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportCOF": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportDECA": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportFBLA": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportFCCLA": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportMAA": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportMCO": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportNABSE": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportNAFME": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportNCSS": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportSHAPE": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportSTEM": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "reportSUPERINTENDENT": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/high-schools/{hsId}/users": {
            "post": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Add user to secondary school",
                "operationId": "addUser",
                "description": "Adds a user to secondary school. User can be an existing UMS/MCO user, if not, they will be created and mapped on the encourage database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "email",
                                    "role",
                                    "permissions"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@user.mail"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "counselor",
                                            "principal",
                                            "teacher",
                                            "coach",
                                            "teaching_assistant",
                                            "superintendent",
                                            "other"
                                        ]
                                    },
                                    "prefix": {
                                        "type": "string",
                                        "enum": [
                                            "mister",
                                            "doctor",
                                            "miss",
                                            "misses"
                                        ]
                                    },
                                    "permissions": {
                                        "type": "object",
                                        "properties": {
                                            "applicationManagement": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "credentialSubmission": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "highSchoolAdmin": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userUid": {
                                            "type": "string",
                                            "example": "aa112233-444a-55aa-a66a-3f7e7baaafa3"
                                        },
                                        "organizationUid": {
                                            "type": "string",
                                            "example": "aa112233-444a-55aa-a66a-3f7e7baaafa3"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "example": "2020-06-11T20:30:52.408Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "example": "2020-06-11T20:30:52.408Z"
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "Primary"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "get": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Get a list of users of a secondary school",
                "operationId": "getUserSecondarySchools",
                "description": "Returns a list of users for that secondary school with count for number of active admins",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "string",
                            "example": "fieldName(asc),otherFieldName(desc)"
                        },
                        "required": false,
                        "description": "Specifies sorting and sort order by fields"
                    },
                    {
                        "in": "query",
                        "name": "permission",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "applicationManagement",
                                "credentialSubmission"
                            ],
                            "example": "credentialSubmission"
                        },
                        "description": "Filter results based on a specific user permission"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userList": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "User",
                                                                "default": "User",
                                                                "enum": [
                                                                    "LdapUser",
                                                                    "Role",
                                                                    "User"
                                                                ]
                                                            },
                                                            "firstName": {
                                                                "type": "string",
                                                                "example": "testUserFirstName"
                                                            },
                                                            "lastName": {
                                                                "type": "string",
                                                                "example": "testUserLastName"
                                                            },
                                                            "userName": {
                                                                "type": "string",
                                                                "example": "testUserName"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "Active",
                                                                "enum": [
                                                                    "Active",
                                                                    "Inactive",
                                                                    "Pending",
                                                                    "Disabled"
                                                                ]
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "format": "email",
                                                                "example": "test@user.mail"
                                                            },
                                                            "verifiedDate": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T18:29:25.493Z"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T18:29:25.493Z"
                                                            },
                                                            "externalIds": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "uid",
                                                                        "userUid",
                                                                        "source",
                                                                        "externalId"
                                                                    ],
                                                                    "properties": {
                                                                        "uid": {
                                                                            "type": "string",
                                                                            "example": "aaaa-bbbbb-ccccc-ddddd",
                                                                            "description": "UMS unique identifier for the external ID entity"
                                                                        },
                                                                        "userUid": {
                                                                            "type": "string",
                                                                            "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                                        },
                                                                        "organizationUid": {
                                                                            "type": "string",
                                                                            "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                                            "description": "Optional property if the external ID for the user is related to an org"
                                                                        },
                                                                        "source": {
                                                                            "type": "string",
                                                                            "example": "contact_id"
                                                                        },
                                                                        "externalId": {
                                                                            "type": "string",
                                                                            "example": "HCSXFXYZ"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "roles": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "uid": {
                                                                            "type": "string",
                                                                            "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                                        },
                                                                        "roleName": {
                                                                            "type": "string",
                                                                            "example": "Administrator"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "number"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "value": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "at": {
                                                                                            "type": "number"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "organization": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uid": {
                                                                "type": "string",
                                                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Organization",
                                                                    "OrgType"
                                                                ]
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "NitzscheandSons"
                                                            }
                                                        }
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Primary",
                                                            "Secondary",
                                                            "Admin"
                                                        ]
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "example": "2020-06-19T14:29:37.492Z"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "example": "2020-06-19T14:29:37.492Z"
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "oneOf": [
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "boolean"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "adminCount": {
                                            "type": "number",
                                            "example": 2
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "total-count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of resources for the input query"
                            },
                            "total-pages": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The total number of pages considering the input query and the limit query parameter"
                            },
                            "prev-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
                            },
                            "next-offset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "User has no access to this secondary school",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/high-schools/{hsId}/users/{uid}": {
            "put": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Edit user",
                "operationId": "editUserHS",
                "description": "Edit user role or permissions in a secondary school",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "counselor",
                                            "principal",
                                            "teacher",
                                            "coach",
                                            "teaching_assistant",
                                            "superintendent",
                                            "other"
                                        ]
                                    },
                                    "permissions": {
                                        "type": "object",
                                        "properties": {
                                            "applicationManagement": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "credentialSubmission": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "highSchoolAdmin": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "aa112233-444a-55aa-a66a-3f7e7baaafa3"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "get": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Get user",
                "operationId": "getUserHS",
                "description": "Get full user with permissions in a secondary school",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "creator": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "testUserFirstName"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "testUserLastName"
                                                }
                                            }
                                        },
                                        "permissions": {
                                            "type": "object",
                                            "properties": {
                                                "applicationManagement": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "credentialSubmission": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "highSchoolAdmin": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        },
                                        "organizations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Sample University"
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "prefix": {
                                            "type": "string",
                                            "enum": [
                                                "doctor",
                                                "mr",
                                                "mrs",
                                                "ms"
                                            ]
                                        },
                                        "role": {
                                            "type": "string",
                                            "enum": [
                                                "counselor",
                                                "principal",
                                                "teacher",
                                                "coach",
                                                "teaching_assistant",
                                                "superintendent",
                                                "other"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Delete school relation with user",
                "operationId": "deletedUserSchool",
                "description": "Deletes the relation between a secondary school and a user",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier in UMS",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Nonexisting secondary school"
                    },
                    "401": {
                        "description": "User has no access to this secondary school",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User has no relation with this secondary school to delete"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/high-schools/{hsId}/validate-email": {
            "post": {
                "tags": [
                    "High Schools"
                ],
                "summary": "Validate email for associating account",
                "operationId": "validateEmailHS",
                "description": "Request UMS for provided email. If email is taken, return the user, else returns empty",
                "parameters": [
                    {
                        "name": "hsId",
                        "in": "path",
                        "description": "Unique ID for MCO High School",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@test.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accept-invitation": {
            "post": {
                "tags": [
                    "Invitations"
                ],
                "summary": "Accept invitation",
                "operationId": "acceptInvitation",
                "description": "Accept student invitation to be his/her mentor with an existing account of Encourage. Invited user must be authenticated.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "studentKey",
                                    "mentorEmail",
                                    "token"
                                ],
                                "properties": {
                                    "studentKey": {
                                        "type": "string",
                                        "example": "9999999"
                                    },
                                    "mentorEmail": {
                                        "type": "string",
                                        "example": "test@user.mail"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid user or missing body property"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid invitation or wrong recipient"
                    },
                    "409": {
                        "description": "Relationship already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/activate-user-from-invitation": {
            "post": {
                "tags": [
                    "Authorization",
                    "Invitations"
                ],
                "summary": "Activate user from invitation",
                "operationId": "activateUserFromInvitation",
                "description": "Create a new user in Encourage from a student invitation and associate the new user as student mentor. \n        User must have accepted the Terms of Use and will not receive any activation email.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "token",
                                    "mentorEmail",
                                    "firstName",
                                    "lastName",
                                    "password",
                                    "studentKey",
                                    "role",
                                    "acceptedTerms"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "mentorEmail": {
                                        "type": "string",
                                        "example": "test@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "1a2b3c4d5e"
                                    },
                                    "studentKey": {
                                        "type": "string",
                                        "example": "9999999"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "counselor",
                                            "principal",
                                            "teacher",
                                            "coach",
                                            "teaching_assistant",
                                            "superintendent",
                                            "other"
                                        ]
                                    },
                                    "acceptedTerms": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "prefix": {
                                        "type": "string",
                                        "enum": [
                                            "doctor",
                                            "mr",
                                            "mrs",
                                            "ms"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Missing body property"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid invitation"
                    },
                    "409": {
                        "description": "Relationship already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/invitations/{studentKey}/users/{mentorEmail}": {
            "get": {
                "tags": [
                    "Invitations"
                ],
                "summary": "Get invitation details",
                "operationId": "getInvitationDetails",
                "description": "Get the details of a specific student invitation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The invitation validation token\n",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "studentKey",
                        "in": "path",
                        "description": "Student key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mentorEmail",
                        "in": "path",
                        "description": "The invited mentor email, possibly already associated to an Encourage account",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "studentFirstName": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "studentLastName": {
                                            "type": "string",
                                            "example": "Longo"
                                        },
                                        "studentEmail": {
                                            "type": "string",
                                            "example": "test@mail.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid invitation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/datagen": {
            "post": {
                "tags": [
                    "Test Data"
                ],
                "summary": "Creates test data",
                "operationId": "dataGen",
                "description": "Creates an student on MO associated to an Encourage user",
                "requestBody": {
                    "required": false,
                    "description": "Creates one student on myOptions, with default password `password` and emails based on the timestamp.\n          Also creates a new Encourage user ready to use with access to Application Management and Mentoring, with the default password `password`.\n          <br>\n          <br>\n          If you choose to use an existing Encourage user, inform its UID and  it will be associated to the student.\n          However, permission may have to be manually checked.\n          <br>\n          <br>\n          There are multiple schemas below for this route depending if a new user is created or not and depending how the checklist items are updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "encUserUid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "0f8ca33c-bd98-4f06-92a2-ab80bb07f965",
                                        "description": "When used, associates students to this user instead of creating a new Encourage user, same as encUserEmail"
                                    },
                                    "encUserEmail": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@mail.com",
                                        "description": "When used, associates students to this user instead of creating a new Encourage user, same as encUserUid"
                                    },
                                    "gradYear": {
                                        "type": "number",
                                        "default": 2022,
                                        "example": 2021,
                                        "description": "The default value is always equivalent to senior year"
                                    },
                                    "hsId": {
                                        "type": "string",
                                        "default": "HS031635",
                                        "example": "HS000593"
                                    },
                                    "checklist": {
                                        "type": "string",
                                        "default": "empty",
                                        "enum": [
                                            "empty",
                                            "random",
                                            "full"
                                        ],
                                        "description": "Random will pick 30 checklist item and set them as completed or archived"
                                    },
                                    "fafsa": {
                                        "type": "string",
                                        "default": "MOPFAFSANOT",
                                        "enum": [
                                            "random",
                                            "MOPFAFSANOT",
                                            "MOPFAFSASTARTED",
                                            "MOPFAFSASUBMITTED",
                                            "MOPFAFSASELECTED",
                                            "MOPFAFSARESUBMITTED",
                                            "MOPFAFSAACCEPTED"
                                        ]
                                    },
                                    "collegeApplications": {
                                        "type": "object",
                                        "example": {
                                            "2": "APPLYING_25",
                                            "6": "APPLIED",
                                            "[id]": "[status]"
                                        },
                                        "additionalProperties": {
                                            "type": "string",
                                            "enum": [
                                                "random",
                                                "INITIAL",
                                                "APPLYING_0",
                                                "APPLYING_25",
                                                "APPLYING_50",
                                                "APPLYING_75",
                                                "APPLIED",
                                                "ACCEPTED",
                                                "NOT_ACCEPTED",
                                                "ENROLLING",
                                                "NOT_ENROLLING",
                                                "DEFERRED_WAITLISTED"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "encourageUser": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "User",
                                                            "default": "User",
                                                            "enum": [
                                                                "LdapUser",
                                                                "Role",
                                                                "User"
                                                            ]
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        },
                                                        "userName": {
                                                            "type": "string",
                                                            "example": "testUserName"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "Active",
                                                            "enum": [
                                                                "Active",
                                                                "Inactive",
                                                                "Pending",
                                                                "Disabled"
                                                            ]
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "test@user.mail"
                                                        },
                                                        "verifiedDate": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2019-01-07T18:29:25.493Z"
                                                        },
                                                        "createdAt": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2019-01-07T18:29:25.493Z"
                                                        },
                                                        "updatedAt": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2019-01-07T18:29:25.493Z"
                                                        },
                                                        "externalIds": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "uid",
                                                                    "userUid",
                                                                    "source",
                                                                    "externalId"
                                                                ],
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                                        "description": "UMS unique identifier for the external ID entity"
                                                                    },
                                                                    "userUid": {
                                                                        "type": "string",
                                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                                    },
                                                                    "organizationUid": {
                                                                        "type": "string",
                                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                                    },
                                                                    "source": {
                                                                        "type": "string",
                                                                        "example": "contact_id"
                                                                    },
                                                                    "externalId": {
                                                                        "type": "string",
                                                                        "example": "HCSXFXYZ"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "creator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "uid": {
                                                                    "type": "string",
                                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                                },
                                                                "firstName": {
                                                                    "type": "string",
                                                                    "example": "testUserFirstName"
                                                                },
                                                                "lastName": {
                                                                    "type": "string",
                                                                    "example": "testUserLastName"
                                                                }
                                                            }
                                                        },
                                                        "organizations": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Sample University"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "roles": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                                    },
                                                                    "roleName": {
                                                                        "type": "string",
                                                                        "example": "Administrator"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "prefix": {
                                                            "type": "string",
                                                            "enum": [
                                                                "doctor",
                                                                "mr",
                                                                "mrs",
                                                                "ms"
                                                            ]
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "counselor",
                                                                "principal",
                                                                "teacher",
                                                                "coach",
                                                                "teaching_assistant",
                                                                "superintendent",
                                                                "other"
                                                            ]
                                                        },
                                                        "attributes": {
                                                            "type": "array",
                                                            "example": []
                                                        },
                                                        "entityKey": {
                                                            "type": "number",
                                                            "example": 1012030710
                                                        }
                                                    }
                                                },
                                                "secondarySchool": {
                                                    "type": "object",
                                                    "properties": {
                                                        "hs_id": {
                                                            "type": "string",
                                                            "example": "HS021361"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Stanfield Johnson"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "Stanfield"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "example": "WA"
                                                        },
                                                        "address_1": {
                                                            "type": "string",
                                                            "example": "3101 S Bagdad Rd"
                                                        },
                                                        "address_2": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "zip": {
                                                            "type": "string",
                                                            "example": "11222"
                                                        },
                                                        "zip4": {
                                                            "type": "string",
                                                            "example": "2328"
                                                        },
                                                        "usps_address_1": {
                                                            "type": "string",
                                                            "example": "3101 S Bagdad Rd"
                                                        },
                                                        "usps_address_2": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "usps_city": {
                                                            "type": "string",
                                                            "example": "Brooklyn"
                                                        },
                                                        "usps_state": {
                                                            "type": "string",
                                                            "example": "NY"
                                                        },
                                                        "usps_zip": {
                                                            "type": "string",
                                                            "example": "11222"
                                                        },
                                                        "district": {
                                                            "type": "object",
                                                            "properties": {
                                                                "hs_id": {
                                                                    "type": "string",
                                                                    "example": "HS021361"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Stanfield Johnson"
                                                                },
                                                                "city": {
                                                                    "type": "string",
                                                                    "example": "Stanfield"
                                                                },
                                                                "state": {
                                                                    "type": "string",
                                                                    "example": "WA"
                                                                },
                                                                "address_1": {
                                                                    "type": "string",
                                                                    "example": "3101 S Bagdad Rd"
                                                                },
                                                                "address_2": {
                                                                    "type": "string",
                                                                    "example": ""
                                                                },
                                                                "zip": {
                                                                    "type": "string",
                                                                    "example": "11222"
                                                                },
                                                                "zip4": {
                                                                    "type": "string",
                                                                    "example": "2328"
                                                                },
                                                                "usps_address_1": {
                                                                    "type": "string",
                                                                    "example": "3101 S Bagdad Rd"
                                                                },
                                                                "usps_address_2": {
                                                                    "type": "string",
                                                                    "example": ""
                                                                },
                                                                "usps_city": {
                                                                    "type": "string",
                                                                    "example": "Brooklyn"
                                                                },
                                                                "usps_state": {
                                                                    "type": "string",
                                                                    "example": "NY"
                                                                },
                                                                "usps_zip": {
                                                                    "type": "string",
                                                                    "example": "11222"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "students": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "profile": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "first_name": {
                                                                        "type": "string",
                                                                        "example": "Userfirstname"
                                                                    },
                                                                    "last_name": {
                                                                        "type": "string",
                                                                        "example": "Userlastname"
                                                                    },
                                                                    "graduation_year": {
                                                                        "type": "string",
                                                                        "example": "2018"
                                                                    },
                                                                    "address_one": {
                                                                        "type": "string",
                                                                        "example": "Woodside Lane"
                                                                    },
                                                                    "zip_code": {
                                                                        "type": "string",
                                                                        "example": "92345"
                                                                    },
                                                                    "is_valid_address": {
                                                                        "type": "boolean",
                                                                        "example": false
                                                                    },
                                                                    "high_school_id": {
                                                                        "type": "string",
                                                                        "example": "HS1234"
                                                                    },
                                                                    "high_school": {
                                                                        "type": "string",
                                                                        "example": "California High School"
                                                                    },
                                                                    "is_survey_complete": {
                                                                        "type": "string",
                                                                        "example": "true"
                                                                    },
                                                                    "user_type": {
                                                                        "type": "string",
                                                                        "default": "student",
                                                                        "example": "high-school"
                                                                    },
                                                                    "high_school_country": {
                                                                        "type": "string",
                                                                        "example": "usa"
                                                                    },
                                                                    "college_start_year": {
                                                                        "type": "string",
                                                                        "example": "2019"
                                                                    },
                                                                    "country": {
                                                                        "type": "string",
                                                                        "example": "United States of America"
                                                                    }
                                                                }
                                                            },
                                                            "personal_story": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "parents_went_college": {
                                                                        "type": "string",
                                                                        "description": "Boolean but stringified",
                                                                        "example": "true"
                                                                    }
                                                                }
                                                            },
                                                            "student_key": {
                                                                "type": "string",
                                                                "example": "576173212"
                                                            },
                                                            "authentication_id": {
                                                                "type": "string",
                                                                "example": "28930FA2-B0E5-463F-9A9E-9B61001243B1"
                                                            },
                                                            "last_activity_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T19:01:01.088Z"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "format": "email",
                                                                "example": "user@ma.il"
                                                            },
                                                            "seq_num": {
                                                                "type": "string",
                                                                "example": "576173212"
                                                            },
                                                            "date_of_birth": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "1996-05-23T00:00:00.000Z"
                                                            },
                                                            "username": {
                                                                "type": "string",
                                                                "example": "user@ma.il",
                                                                "deprecated": true
                                                            },
                                                            "tos_agreed_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2018-11-29T11:25:13.000Z"
                                                            },
                                                            "user_type": {
                                                                "type": "string",
                                                                "default": "student",
                                                                "example": "high-school"
                                                            },
                                                            "bearer_token": {
                                                                "type": "string",
                                                                "example": "JF83HF73H21D0GJ3W9W02F29"
                                                            },
                                                            "facebook_id": {
                                                                "type": "string",
                                                                "example": "fbidstring",
                                                                "deprecated": true
                                                            },
                                                            "twitter_id": {
                                                                "type": "string",
                                                                "example": "twidstring",
                                                                "deprecated": true
                                                            },
                                                            "email_verified_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T20:11:00.014Z"
                                                            },
                                                            "referred_by_code": {
                                                                "type": "string"
                                                            },
                                                            "gpa": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "minimum": 0,
                                                                "maximum": 4,
                                                                "default": 0,
                                                                "example": 4
                                                            },
                                                            "is_admin": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "admittedly_score": {
                                                                "type": "integer",
                                                                "minimum": 0,
                                                                "maximum": 100,
                                                                "default": 0,
                                                                "example": 95
                                                            },
                                                            "is_tutorial_completed": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "is_profile_public": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "tutorial_step": {
                                                                "type": "string",
                                                                "default": ""
                                                            },
                                                            "update_increment": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "example": 12
                                                            },
                                                            "is_school_verified": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "personal_color": {
                                                                "type": "string"
                                                            },
                                                            "profile_completion": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "default": 0,
                                                                "example": 0.75
                                                            },
                                                            "subscription_expires_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2020-01-01T00:00:00.000Z"
                                                            },
                                                            "from_mo": {
                                                                "type": "boolean",
                                                                "default": true,
                                                                "example": true
                                                            },
                                                            "old_password_format": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "onboarding_status": {
                                                                "type": "string",
                                                                "default": "INITIAL",
                                                                "enum": [
                                                                    "INITIAL",
                                                                    "STARTED"
                                                                ]
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T18:29:25.493Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T19:01:01.088Z"
                                                            },
                                                            "forum_posts_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "example": 3,
                                                                "deprecated": true
                                                            },
                                                            "forum_likes_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "example": 4,
                                                                "deprecated": true
                                                            },
                                                            "following_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "deprecated": true
                                                            },
                                                            "follower_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "deprecated": true
                                                            },
                                                            "has_unlimited_messages": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "deprecated": true
                                                            },
                                                            "surveyAnswers": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "PARENTCOL": {
                                                                        "type": "array",
                                                                        "uniqueItems": true,
                                                                        "items": {
                                                                            "type": "string",
                                                                            "example": "PARCOLYES"
                                                                        }
                                                                    },
                                                                    "GRADYEAR": {
                                                                        "type": "array",
                                                                        "uniqueItems": true,
                                                                        "items": {
                                                                            "type": "string",
                                                                            "example": "HSGRAD2021"
                                                                        }
                                                                    },
                                                                    "MOPFAFSA": {
                                                                        "type": "array",
                                                                        "uniqueItems": true,
                                                                        "items": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "MOPFAFSANOT",
                                                                                "MOPFAFSASTARTED",
                                                                                "MOPFAFSASUBMITTED",
                                                                                "MOPFAFSASELECTED",
                                                                                "MOPFAFSARESUBMITTED",
                                                                                "MOPFAFSAACCEPTED"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "password": {
                                                                "type": "string",
                                                                "example": "password"
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "student_key": {
                                                                                    "type": "string",
                                                                                    "example": "102482975"
                                                                                },
                                                                                "school_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "application_status_key": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "INITIAL",
                                                                                        "APPLYING_0",
                                                                                        "APPLYING_25",
                                                                                        "APPLYING_50",
                                                                                        "APPLYING_75",
                                                                                        "APPLIED",
                                                                                        "ACCEPTED",
                                                                                        "NOT_ACCEPTED",
                                                                                        "ENROLLING",
                                                                                        "NOT_ENROLLING",
                                                                                        "DEFERRED_WAITLISTED"
                                                                                    ]
                                                                                },
                                                                                "update_increment": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "is_bookmarked": {
                                                                                    "type": "boolean",
                                                                                    "example": true
                                                                                },
                                                                                "is_declared": {
                                                                                    "type": "boolean",
                                                                                    "example": true
                                                                                },
                                                                                "is_quickmatch": {
                                                                                    "type": "boolean",
                                                                                    "example": false
                                                                                },
                                                                                "is_aos": {
                                                                                    "type": "boolean",
                                                                                    "example": false
                                                                                },
                                                                                "application_status": {
                                                                                    "type": "string",
                                                                                    "example": "applying"
                                                                                },
                                                                                "applying_percent": {
                                                                                    "type": "integer",
                                                                                    "example": 75
                                                                                },
                                                                                "school": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string",
                                                                                            "example": "CollegeName"
                                                                                        },
                                                                                        "nickname": {
                                                                                            "type": "string",
                                                                                            "example": "CollegeNickname"
                                                                                        },
                                                                                        "fice": {
                                                                                            "type": "string",
                                                                                            "example": "1525134"
                                                                                        },
                                                                                        "ug_inst_id": {
                                                                                            "type": "string",
                                                                                            "example": "collegeinsta"
                                                                                        },
                                                                                        "ipeds_id": {
                                                                                            "type": "string",
                                                                                            "default": "234525"
                                                                                        },
                                                                                        "address_1": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeAddress1"
                                                                                        },
                                                                                        "address_2": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeAddress2"
                                                                                        },
                                                                                        "city": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeCity"
                                                                                        },
                                                                                        "state": {
                                                                                            "type": "string",
                                                                                            "default": "CS"
                                                                                        },
                                                                                        "zip": {
                                                                                            "type": "string",
                                                                                            "default": "12345"
                                                                                        },
                                                                                        "country": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeCountry"
                                                                                        },
                                                                                        "urls": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "M",
                                                                                                            "I",
                                                                                                            "S",
                                                                                                            "A",
                                                                                                            "B"
                                                                                                        ]
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string",
                                                                                                        "example": "www.example.com"
                                                                                                    },
                                                                                                    "type_desc": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "Main",
                                                                                                            "Inquiry",
                                                                                                            "Schedule Visit",
                                                                                                            "Apply",
                                                                                                            "Admissions Blog"
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "has_campus_image_1x1": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "has_campus_image_16x9": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "slug_name": {
                                                                                            "type": "string",
                                                                                            "example": "test-university-1"
                                                                                        },
                                                                                        "images": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "logo": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/logo.png"
                                                                                                },
                                                                                                "1x1_320": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_640": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_1076": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_1500": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_2048": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_320": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_640": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_1076": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_1500": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_2048": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "school_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "error": {
                                                                                    "type": "string",
                                                                                    "example": "College not found"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "checklist": {
                                                                "oneOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "updatedChecklistIds": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "integer",
                                                                                    "example": 42
                                                                                }
                                                                            },
                                                                            "items": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "id": {
                                                                                            "type": "integer",
                                                                                            "example": 27
                                                                                        },
                                                                                        "is_visible": {
                                                                                            "type": "boolean",
                                                                                            "default": false,
                                                                                            "example": true
                                                                                        },
                                                                                        "title": {
                                                                                            "type": "string",
                                                                                            "example": "Checklist item title"
                                                                                        },
                                                                                        "description": {
                                                                                            "type": "string",
                                                                                            "example": "Checklist item description"
                                                                                        },
                                                                                        "link": {
                                                                                            "type": "string",
                                                                                            "format": "uri",
                                                                                            "example": "https://some.link.here"
                                                                                        },
                                                                                        "deadline": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-09-24T01:38:17.690Z"
                                                                                        },
                                                                                        "high_school_grade": {
                                                                                            "type": "integer",
                                                                                            "minimum": 0,
                                                                                            "maximum": 4,
                                                                                            "example": 2
                                                                                        },
                                                                                        "semester": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1,
                                                                                            "maximum": 2,
                                                                                            "example": 2
                                                                                        },
                                                                                        "is_athlete": {
                                                                                            "type": "boolean",
                                                                                            "default": false,
                                                                                            "example": true
                                                                                        },
                                                                                        "is_first_gen": {
                                                                                            "type": "boolean",
                                                                                            "default": false,
                                                                                            "example": false
                                                                                        },
                                                                                        "created_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-04-24T01:38:17.690Z"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-06-28T03:34:54.191Z"
                                                                                        },
                                                                                        "deleted_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time"
                                                                                        },
                                                                                        "status": {
                                                                                            "type": "integer",
                                                                                            "minimum": 0,
                                                                                            "maximum": 2,
                                                                                            "example": 1
                                                                                        },
                                                                                        "status_updated_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-06-28T03:34:54.191Z"
                                                                                        },
                                                                                        "personal_notes": {
                                                                                            "type": "string",
                                                                                            "example": "Checklist item personal notes"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer",
                                                                                    "example": 27
                                                                                },
                                                                                "is_visible": {
                                                                                    "type": "boolean",
                                                                                    "default": false,
                                                                                    "example": true
                                                                                },
                                                                                "title": {
                                                                                    "type": "string",
                                                                                    "example": "Checklist item title"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string",
                                                                                    "example": "Checklist item description"
                                                                                },
                                                                                "link": {
                                                                                    "type": "string",
                                                                                    "format": "uri",
                                                                                    "example": "https://some.link.here"
                                                                                },
                                                                                "deadline": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-09-24T01:38:17.690Z"
                                                                                },
                                                                                "high_school_grade": {
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 4,
                                                                                    "example": 2
                                                                                },
                                                                                "semester": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1,
                                                                                    "maximum": 2,
                                                                                    "example": 2
                                                                                },
                                                                                "is_athlete": {
                                                                                    "type": "boolean",
                                                                                    "default": false,
                                                                                    "example": true
                                                                                },
                                                                                "is_first_gen": {
                                                                                    "type": "boolean",
                                                                                    "default": false,
                                                                                    "example": false
                                                                                },
                                                                                "created_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-04-24T01:38:17.690Z"
                                                                                },
                                                                                "updated_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-06-28T03:34:54.191Z"
                                                                                },
                                                                                "deleted_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "status": {
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 2,
                                                                                    "example": 1
                                                                                },
                                                                                "status_updated_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-06-28T03:34:54.191Z"
                                                                                },
                                                                                "personal_notes": {
                                                                                    "type": "string",
                                                                                    "example": "Checklist item personal notes"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "newEncourageUser": {
                                                    "type": "object",
                                                    "properties": {
                                                        "uid": {
                                                            "type": "string",
                                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "User",
                                                            "default": "User",
                                                            "enum": [
                                                                "LdapUser",
                                                                "Role",
                                                                "User"
                                                            ]
                                                        },
                                                        "firstName": {
                                                            "type": "string",
                                                            "example": "testUserFirstName"
                                                        },
                                                        "lastName": {
                                                            "type": "string",
                                                            "example": "testUserLastName"
                                                        },
                                                        "userName": {
                                                            "type": "string",
                                                            "example": "testUserName"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "Active",
                                                            "enum": [
                                                                "Active",
                                                                "Inactive",
                                                                "Pending",
                                                                "Disabled"
                                                            ]
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "test@user.mail"
                                                        },
                                                        "verifiedDate": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2019-01-07T18:29:25.493Z"
                                                        },
                                                        "createdAt": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2019-01-07T18:29:25.493Z"
                                                        },
                                                        "updatedAt": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2019-01-07T18:29:25.493Z"
                                                        },
                                                        "externalIds": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "uid",
                                                                    "userUid",
                                                                    "source",
                                                                    "externalId"
                                                                ],
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                                        "description": "UMS unique identifier for the external ID entity"
                                                                    },
                                                                    "userUid": {
                                                                        "type": "string",
                                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                                    },
                                                                    "organizationUid": {
                                                                        "type": "string",
                                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                                    },
                                                                    "source": {
                                                                        "type": "string",
                                                                        "example": "contact_id"
                                                                    },
                                                                    "externalId": {
                                                                        "type": "string",
                                                                        "example": "HCSXFXYZ"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "creator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "uid": {
                                                                    "type": "string",
                                                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                                },
                                                                "firstName": {
                                                                    "type": "string",
                                                                    "example": "testUserFirstName"
                                                                },
                                                                "lastName": {
                                                                    "type": "string",
                                                                    "example": "testUserLastName"
                                                                }
                                                            }
                                                        },
                                                        "organizations": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Sample University"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "roles": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                                    },
                                                                    "roleName": {
                                                                        "type": "string",
                                                                        "example": "Administrator"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "prefix": {
                                                            "type": "string",
                                                            "enum": [
                                                                "doctor",
                                                                "mr",
                                                                "mrs",
                                                                "ms"
                                                            ]
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "counselor",
                                                                "principal",
                                                                "teacher",
                                                                "coach",
                                                                "teaching_assistant",
                                                                "superintendent",
                                                                "other"
                                                            ]
                                                        },
                                                        "attributes": {
                                                            "type": "array",
                                                            "example": []
                                                        },
                                                        "entityKey": {
                                                            "type": "number",
                                                            "example": 1012030710
                                                        },
                                                        "applications": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "modules": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "uid": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "permissionOverwrite": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "attributesOverwrite": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string",
                                                                                            "example": "tempore"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "Encourage"
                                                                    },
                                                                    "uid": {
                                                                        "type": "string",
                                                                        "example": "ec9ac895-814b-4a68-8577-2b19dcb257b3"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Encourage"
                                                                    },
                                                                    "status": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "Active",
                                                                            "Inactive",
                                                                            "PendingApproval"
                                                                        ],
                                                                        "example": "Active"
                                                                    },
                                                                    "attributes": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string",
                                                                                "example": "tempore"
                                                                            },
                                                                            "value": {
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "password": {
                                                            "type": "string",
                                                            "example": "password"
                                                        }
                                                    }
                                                },
                                                "secondarySchool": {
                                                    "type": "object",
                                                    "properties": {
                                                        "hs_id": {
                                                            "type": "string",
                                                            "example": "HS021361"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Stanfield Johnson"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "Stanfield"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "example": "WA"
                                                        },
                                                        "address_1": {
                                                            "type": "string",
                                                            "example": "3101 S Bagdad Rd"
                                                        },
                                                        "address_2": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "zip": {
                                                            "type": "string",
                                                            "example": "11222"
                                                        },
                                                        "zip4": {
                                                            "type": "string",
                                                            "example": "2328"
                                                        },
                                                        "usps_address_1": {
                                                            "type": "string",
                                                            "example": "3101 S Bagdad Rd"
                                                        },
                                                        "usps_address_2": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "usps_city": {
                                                            "type": "string",
                                                            "example": "Brooklyn"
                                                        },
                                                        "usps_state": {
                                                            "type": "string",
                                                            "example": "NY"
                                                        },
                                                        "usps_zip": {
                                                            "type": "string",
                                                            "example": "11222"
                                                        },
                                                        "district": {
                                                            "type": "object",
                                                            "properties": {
                                                                "hs_id": {
                                                                    "type": "string",
                                                                    "example": "HS021361"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Stanfield Johnson"
                                                                },
                                                                "city": {
                                                                    "type": "string",
                                                                    "example": "Stanfield"
                                                                },
                                                                "state": {
                                                                    "type": "string",
                                                                    "example": "WA"
                                                                },
                                                                "address_1": {
                                                                    "type": "string",
                                                                    "example": "3101 S Bagdad Rd"
                                                                },
                                                                "address_2": {
                                                                    "type": "string",
                                                                    "example": ""
                                                                },
                                                                "zip": {
                                                                    "type": "string",
                                                                    "example": "11222"
                                                                },
                                                                "zip4": {
                                                                    "type": "string",
                                                                    "example": "2328"
                                                                },
                                                                "usps_address_1": {
                                                                    "type": "string",
                                                                    "example": "3101 S Bagdad Rd"
                                                                },
                                                                "usps_address_2": {
                                                                    "type": "string",
                                                                    "example": ""
                                                                },
                                                                "usps_city": {
                                                                    "type": "string",
                                                                    "example": "Brooklyn"
                                                                },
                                                                "usps_state": {
                                                                    "type": "string",
                                                                    "example": "NY"
                                                                },
                                                                "usps_zip": {
                                                                    "type": "string",
                                                                    "example": "11222"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "students": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "profile": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "first_name": {
                                                                        "type": "string",
                                                                        "example": "Userfirstname"
                                                                    },
                                                                    "last_name": {
                                                                        "type": "string",
                                                                        "example": "Userlastname"
                                                                    },
                                                                    "graduation_year": {
                                                                        "type": "string",
                                                                        "example": "2018"
                                                                    },
                                                                    "address_one": {
                                                                        "type": "string",
                                                                        "example": "Woodside Lane"
                                                                    },
                                                                    "zip_code": {
                                                                        "type": "string",
                                                                        "example": "92345"
                                                                    },
                                                                    "is_valid_address": {
                                                                        "type": "boolean",
                                                                        "example": false
                                                                    },
                                                                    "high_school_id": {
                                                                        "type": "string",
                                                                        "example": "HS1234"
                                                                    },
                                                                    "high_school": {
                                                                        "type": "string",
                                                                        "example": "California High School"
                                                                    },
                                                                    "is_survey_complete": {
                                                                        "type": "string",
                                                                        "example": "true"
                                                                    },
                                                                    "user_type": {
                                                                        "type": "string",
                                                                        "default": "student",
                                                                        "example": "high-school"
                                                                    },
                                                                    "high_school_country": {
                                                                        "type": "string",
                                                                        "example": "usa"
                                                                    },
                                                                    "college_start_year": {
                                                                        "type": "string",
                                                                        "example": "2019"
                                                                    },
                                                                    "country": {
                                                                        "type": "string",
                                                                        "example": "United States of America"
                                                                    }
                                                                }
                                                            },
                                                            "personal_story": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "parents_went_college": {
                                                                        "type": "string",
                                                                        "description": "Boolean but stringified",
                                                                        "example": "true"
                                                                    }
                                                                }
                                                            },
                                                            "student_key": {
                                                                "type": "string",
                                                                "example": "576173212"
                                                            },
                                                            "authentication_id": {
                                                                "type": "string",
                                                                "example": "28930FA2-B0E5-463F-9A9E-9B61001243B1"
                                                            },
                                                            "last_activity_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T19:01:01.088Z"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "format": "email",
                                                                "example": "user@ma.il"
                                                            },
                                                            "seq_num": {
                                                                "type": "string",
                                                                "example": "576173212"
                                                            },
                                                            "date_of_birth": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "1996-05-23T00:00:00.000Z"
                                                            },
                                                            "username": {
                                                                "type": "string",
                                                                "example": "user@ma.il",
                                                                "deprecated": true
                                                            },
                                                            "tos_agreed_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2018-11-29T11:25:13.000Z"
                                                            },
                                                            "user_type": {
                                                                "type": "string",
                                                                "default": "student",
                                                                "example": "high-school"
                                                            },
                                                            "bearer_token": {
                                                                "type": "string",
                                                                "example": "JF83HF73H21D0GJ3W9W02F29"
                                                            },
                                                            "facebook_id": {
                                                                "type": "string",
                                                                "example": "fbidstring",
                                                                "deprecated": true
                                                            },
                                                            "twitter_id": {
                                                                "type": "string",
                                                                "example": "twidstring",
                                                                "deprecated": true
                                                            },
                                                            "email_verified_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T20:11:00.014Z"
                                                            },
                                                            "referred_by_code": {
                                                                "type": "string"
                                                            },
                                                            "gpa": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "minimum": 0,
                                                                "maximum": 4,
                                                                "default": 0,
                                                                "example": 4
                                                            },
                                                            "is_admin": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "admittedly_score": {
                                                                "type": "integer",
                                                                "minimum": 0,
                                                                "maximum": 100,
                                                                "default": 0,
                                                                "example": 95
                                                            },
                                                            "is_tutorial_completed": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "is_profile_public": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "tutorial_step": {
                                                                "type": "string",
                                                                "default": ""
                                                            },
                                                            "update_increment": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "example": 12
                                                            },
                                                            "is_school_verified": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "personal_color": {
                                                                "type": "string"
                                                            },
                                                            "profile_completion": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "default": 0,
                                                                "example": 0.75
                                                            },
                                                            "subscription_expires_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2020-01-01T00:00:00.000Z"
                                                            },
                                                            "from_mo": {
                                                                "type": "boolean",
                                                                "default": true,
                                                                "example": true
                                                            },
                                                            "old_password_format": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "example": false
                                                            },
                                                            "onboarding_status": {
                                                                "type": "string",
                                                                "default": "INITIAL",
                                                                "enum": [
                                                                    "INITIAL",
                                                                    "STARTED"
                                                                ]
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T18:29:25.493Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2019-01-07T19:01:01.088Z"
                                                            },
                                                            "forum_posts_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "example": 3,
                                                                "deprecated": true
                                                            },
                                                            "forum_likes_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "example": 4,
                                                                "deprecated": true
                                                            },
                                                            "following_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "deprecated": true
                                                            },
                                                            "follower_count": {
                                                                "type": "integer",
                                                                "default": 0,
                                                                "deprecated": true
                                                            },
                                                            "has_unlimited_messages": {
                                                                "type": "boolean",
                                                                "default": false,
                                                                "deprecated": true
                                                            },
                                                            "surveyAnswers": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "PARENTCOL": {
                                                                        "type": "array",
                                                                        "uniqueItems": true,
                                                                        "items": {
                                                                            "type": "string",
                                                                            "example": "PARCOLYES"
                                                                        }
                                                                    },
                                                                    "GRADYEAR": {
                                                                        "type": "array",
                                                                        "uniqueItems": true,
                                                                        "items": {
                                                                            "type": "string",
                                                                            "example": "HSGRAD2021"
                                                                        }
                                                                    },
                                                                    "MOPFAFSA": {
                                                                        "type": "array",
                                                                        "uniqueItems": true,
                                                                        "items": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "MOPFAFSANOT",
                                                                                "MOPFAFSASTARTED",
                                                                                "MOPFAFSASUBMITTED",
                                                                                "MOPFAFSASELECTED",
                                                                                "MOPFAFSARESUBMITTED",
                                                                                "MOPFAFSAACCEPTED"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "password": {
                                                                "type": "string",
                                                                "example": "password"
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {
                                                                    "oneOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "student_key": {
                                                                                    "type": "string",
                                                                                    "example": "102482975"
                                                                                },
                                                                                "school_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "application_status_key": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "INITIAL",
                                                                                        "APPLYING_0",
                                                                                        "APPLYING_25",
                                                                                        "APPLYING_50",
                                                                                        "APPLYING_75",
                                                                                        "APPLIED",
                                                                                        "ACCEPTED",
                                                                                        "NOT_ACCEPTED",
                                                                                        "ENROLLING",
                                                                                        "NOT_ENROLLING",
                                                                                        "DEFERRED_WAITLISTED"
                                                                                    ]
                                                                                },
                                                                                "update_increment": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "is_bookmarked": {
                                                                                    "type": "boolean",
                                                                                    "example": true
                                                                                },
                                                                                "is_declared": {
                                                                                    "type": "boolean",
                                                                                    "example": true
                                                                                },
                                                                                "is_quickmatch": {
                                                                                    "type": "boolean",
                                                                                    "example": false
                                                                                },
                                                                                "is_aos": {
                                                                                    "type": "boolean",
                                                                                    "example": false
                                                                                },
                                                                                "application_status": {
                                                                                    "type": "string",
                                                                                    "example": "applying"
                                                                                },
                                                                                "applying_percent": {
                                                                                    "type": "integer",
                                                                                    "example": 75
                                                                                },
                                                                                "school": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string",
                                                                                            "example": "CollegeName"
                                                                                        },
                                                                                        "nickname": {
                                                                                            "type": "string",
                                                                                            "example": "CollegeNickname"
                                                                                        },
                                                                                        "fice": {
                                                                                            "type": "string",
                                                                                            "example": "1525134"
                                                                                        },
                                                                                        "ug_inst_id": {
                                                                                            "type": "string",
                                                                                            "example": "collegeinsta"
                                                                                        },
                                                                                        "ipeds_id": {
                                                                                            "type": "string",
                                                                                            "default": "234525"
                                                                                        },
                                                                                        "address_1": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeAddress1"
                                                                                        },
                                                                                        "address_2": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeAddress2"
                                                                                        },
                                                                                        "city": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeCity"
                                                                                        },
                                                                                        "state": {
                                                                                            "type": "string",
                                                                                            "default": "CS"
                                                                                        },
                                                                                        "zip": {
                                                                                            "type": "string",
                                                                                            "default": "12345"
                                                                                        },
                                                                                        "country": {
                                                                                            "type": "string",
                                                                                            "default": "CollegeCountry"
                                                                                        },
                                                                                        "urls": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "M",
                                                                                                            "I",
                                                                                                            "S",
                                                                                                            "A",
                                                                                                            "B"
                                                                                                        ]
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string",
                                                                                                        "example": "www.example.com"
                                                                                                    },
                                                                                                    "type_desc": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "Main",
                                                                                                            "Inquiry",
                                                                                                            "Schedule Visit",
                                                                                                            "Apply",
                                                                                                            "Admissions Blog"
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "has_campus_image_1x1": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "has_campus_image_16x9": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "slug_name": {
                                                                                            "type": "string",
                                                                                            "example": "test-university-1"
                                                                                        },
                                                                                        "images": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "logo": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/logo.png"
                                                                                                },
                                                                                                "1x1_320": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_640": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_1076": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_1500": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "1x1_2048": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_320": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_640": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_1076": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_1500": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                },
                                                                                                "16x9_2048": {
                                                                                                    "type": "string",
                                                                                                    "format": "uri",
                                                                                                    "example": "https://www.test.com/image.jpg"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "school_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "error": {
                                                                                    "type": "string",
                                                                                    "example": "College not found"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "checklist": {
                                                                "oneOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "updatedChecklistIds": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "integer",
                                                                                    "example": 42
                                                                                }
                                                                            },
                                                                            "items": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "id": {
                                                                                            "type": "integer",
                                                                                            "example": 27
                                                                                        },
                                                                                        "is_visible": {
                                                                                            "type": "boolean",
                                                                                            "default": false,
                                                                                            "example": true
                                                                                        },
                                                                                        "title": {
                                                                                            "type": "string",
                                                                                            "example": "Checklist item title"
                                                                                        },
                                                                                        "description": {
                                                                                            "type": "string",
                                                                                            "example": "Checklist item description"
                                                                                        },
                                                                                        "link": {
                                                                                            "type": "string",
                                                                                            "format": "uri",
                                                                                            "example": "https://some.link.here"
                                                                                        },
                                                                                        "deadline": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-09-24T01:38:17.690Z"
                                                                                        },
                                                                                        "high_school_grade": {
                                                                                            "type": "integer",
                                                                                            "minimum": 0,
                                                                                            "maximum": 4,
                                                                                            "example": 2
                                                                                        },
                                                                                        "semester": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1,
                                                                                            "maximum": 2,
                                                                                            "example": 2
                                                                                        },
                                                                                        "is_athlete": {
                                                                                            "type": "boolean",
                                                                                            "default": false,
                                                                                            "example": true
                                                                                        },
                                                                                        "is_first_gen": {
                                                                                            "type": "boolean",
                                                                                            "default": false,
                                                                                            "example": false
                                                                                        },
                                                                                        "created_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-04-24T01:38:17.690Z"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-06-28T03:34:54.191Z"
                                                                                        },
                                                                                        "deleted_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time"
                                                                                        },
                                                                                        "status": {
                                                                                            "type": "integer",
                                                                                            "minimum": 0,
                                                                                            "maximum": 2,
                                                                                            "example": 1
                                                                                        },
                                                                                        "status_updated_at": {
                                                                                            "type": "string",
                                                                                            "format": "date-time",
                                                                                            "example": "2018-06-28T03:34:54.191Z"
                                                                                        },
                                                                                        "personal_notes": {
                                                                                            "type": "string",
                                                                                            "example": "Checklist item personal notes"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer",
                                                                                    "example": 27
                                                                                },
                                                                                "is_visible": {
                                                                                    "type": "boolean",
                                                                                    "default": false,
                                                                                    "example": true
                                                                                },
                                                                                "title": {
                                                                                    "type": "string",
                                                                                    "example": "Checklist item title"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string",
                                                                                    "example": "Checklist item description"
                                                                                },
                                                                                "link": {
                                                                                    "type": "string",
                                                                                    "format": "uri",
                                                                                    "example": "https://some.link.here"
                                                                                },
                                                                                "deadline": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-09-24T01:38:17.690Z"
                                                                                },
                                                                                "high_school_grade": {
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 4,
                                                                                    "example": 2
                                                                                },
                                                                                "semester": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1,
                                                                                    "maximum": 2,
                                                                                    "example": 2
                                                                                },
                                                                                "is_athlete": {
                                                                                    "type": "boolean",
                                                                                    "default": false,
                                                                                    "example": true
                                                                                },
                                                                                "is_first_gen": {
                                                                                    "type": "boolean",
                                                                                    "default": false,
                                                                                    "example": false
                                                                                },
                                                                                "created_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-04-24T01:38:17.690Z"
                                                                                },
                                                                                "updated_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-06-28T03:34:54.191Z"
                                                                                },
                                                                                "deleted_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "status": {
                                                                                    "type": "integer",
                                                                                    "minimum": 0,
                                                                                    "maximum": 2,
                                                                                    "example": 1
                                                                                },
                                                                                "status_updated_at": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2018-06-28T03:34:54.191Z"
                                                                                },
                                                                                "personal_notes": {
                                                                                    "type": "string",
                                                                                    "example": "Checklist item personal notes"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "example": {
                                        "encourageUser": {
                                            "uid": "1e6c6d8e-af30-43ca-a519-395734701eba",
                                            "type": "User",
                                            "firstName": "testUserFirstName",
                                            "lastName": "testUserLastName",
                                            "userName": "testUserName",
                                            "status": "Active",
                                            "email": "test@user.mail",
                                            "verifiedDate": "2019-01-07T18:29:25.493Z",
                                            "createdAt": "2019-01-07T18:29:25.493Z",
                                            "updatedAt": "2019-01-07T18:29:25.493Z",
                                            "creator": {
                                                "uid": "1e6c6d8e-af30-43ca-a519-395734701eba",
                                                "firstName": "testUserFirstName",
                                                "lastName": "testUserLastName"
                                            },
                                            "organizations": [
                                                {
                                                    "uid": "1e6c6d8e-af30-43ca-a519-395734701eba",
                                                    "name": "Sample University"
                                                }
                                            ],
                                            "roles": [
                                                {
                                                    "uid": "bf45a23c-b527-4c5d-b7b8-60250339d265",
                                                    "roleName": "Administrator"
                                                }
                                            ],
                                            "prefix": "doctor",
                                            "role": "counselor",
                                            "attributes": [],
                                            "entityKey": 1012030710
                                        },
                                        "highSchool": {
                                            "hs_id": "HS021361",
                                            "name": "Stanfield Johnson",
                                            "city": "Stanfield",
                                            "state": "WA",
                                            "address_1": "3101 S Bagdad Rd",
                                            "address_2": "",
                                            "zip": "11222",
                                            "zip4": "2328",
                                            "usps_address_1": "3101 S Bagdad Rd",
                                            "usps_address_2": "",
                                            "usps_city": "Brooklyn",
                                            "usps_state": "NY",
                                            "usps_zip": "11222",
                                            "district": {
                                                "hs_id": "HS021361",
                                                "name": "Stanfield Johnson",
                                                "city": "Stanfield",
                                                "state": "WA",
                                                "address_1": "3101 S Bagdad Rd",
                                                "address_2": "",
                                                "zip": "11222",
                                                "zip4": "2328",
                                                "usps_address_1": "3101 S Bagdad Rd",
                                                "usps_address_2": "",
                                                "usps_city": "Brooklyn",
                                                "usps_state": "NY",
                                                "usps_zip": "11222"
                                            }
                                        },
                                        "students": [
                                            {
                                                "profile": {
                                                    "first_name": "Userfirstname",
                                                    "last_name": "Userlastname",
                                                    "graduation_year": "2018",
                                                    "address_one": "Woodside Lane",
                                                    "zip_code": "92345",
                                                    "is_valid_address": false,
                                                    "high_school_id": "HS1234",
                                                    "high_school": "California High School",
                                                    "is_survey_complete": "true",
                                                    "user_type": "high-school",
                                                    "high_school_country": "usa",
                                                    "college_start_year": "2019",
                                                    "country": "United States of America"
                                                },
                                                "personal_story": {
                                                    "parents_went_college": "true"
                                                },
                                                "student_key": "576173212",
                                                "authentication_id": "28930FA2-B0E5-463F-9A9E-9B61001243B1",
                                                "last_activity_at": "2019-01-07T19:01:01.088Z",
                                                "email": "user@ma.il",
                                                "seq_num": "576173212",
                                                "date_of_birth": "1996-05-23T00:00:00.000Z",
                                                "tos_agreed_at": "2018-11-29T11:25:13.000Z",
                                                "user_type": "high-school",
                                                "bearer_token": "JF83HF73H21D0GJ3W9W02F29",
                                                "email_verified_at": "2019-01-07T20:11:00.014Z",
                                                "referred_by_code": "string",
                                                "gpa": 4,
                                                "is_admin": false,
                                                "admittedly_score": 95,
                                                "is_tutorial_completed": false,
                                                "is_profile_public": false,
                                                "tutorial_step": "string",
                                                "update_increment": 12,
                                                "is_school_verified": false,
                                                "personal_color": "string",
                                                "profile_completion": 0.75,
                                                "subscription_expires_at": "2020-01-01T00:00:00.000Z",
                                                "from_mo": true,
                                                "old_password_format": false,
                                                "onboarding_status": "INITIAL",
                                                "created_at": "2019-01-07T18:29:25.493Z",
                                                "updated_at": "2019-01-07T19:01:01.088Z",
                                                "surveyAnswers": {
                                                    "PARENTCOL": [
                                                        "PARCOLYES"
                                                    ],
                                                    "GRADYEAR": [
                                                        "HSGRAD2021"
                                                    ],
                                                    "MOPFAFSA": [
                                                        "MOPFAFSANOT"
                                                    ]
                                                },
                                                "password": "password",
                                                "applications": [
                                                    {
                                                        "student_key": "102482975",
                                                        "school_id": 1,
                                                        "application_status_key": "INITIAL",
                                                        "update_increment": 1,
                                                        "is_bookmarked": true,
                                                        "is_declared": true,
                                                        "is_quickmatch": false,
                                                        "is_aos": false,
                                                        "school": {
                                                            "name": "CollegeName",
                                                            "nickname": "CollegeNickname",
                                                            "fice": "1525134",
                                                            "ug_inst_id": "collegeinsta",
                                                            "ipeds_id": "string",
                                                            "address_1": "string",
                                                            "address_2": "string",
                                                            "city": "string",
                                                            "state": "string",
                                                            "zip": "string",
                                                            "country": "string",
                                                            "has_campus_image_1x1": true,
                                                            "has_campus_image_16x9": true,
                                                            "slug_name": "test-university-1",
                                                            "images": {
                                                                "logo": "https://www.test.com/logo.png",
                                                                "1x1_320": "https://www.test.com/image.jpg",
                                                                "1x1_640": "https://www.test.com/image.jpg",
                                                                "1x1_1076": "https://www.test.com/image.jpg",
                                                                "1x1_1500": "https://www.test.com/image.jpg",
                                                                "1x1_2048": "https://www.test.com/image.jpg",
                                                                "16x9_320": "https://www.test.com/image.jpg",
                                                                "16x9_640": "https://www.test.com/image.jpg",
                                                                "16x9_1076": "https://www.test.com/image.jpg",
                                                                "16x9_1500": "https://www.test.com/image.jpg",
                                                                "16x9_2048": "https://www.test.com/image.jpg"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "checklist": [
                                                    {
                                                        "id": 27,
                                                        "is_visible": true,
                                                        "title": "Checklist item title",
                                                        "description": "Checklist item description",
                                                        "link": "https://some.link.here",
                                                        "deadline": "2018-09-24T01:38:17.690Z",
                                                        "high_school_grade": 2,
                                                        "semester": 2,
                                                        "is_athlete": true,
                                                        "is_first_gen": false,
                                                        "created_at": "2018-04-24T01:38:17.690Z",
                                                        "updated_at": "2018-06-28T03:34:54.191Z",
                                                        "deleted_at": "2020-08-24T16:49:53.983Z",
                                                        "status": 1,
                                                        "status_updated_at": "2018-06-28T03:34:54.191Z",
                                                        "personal_notes": "Checklist item personal notes"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/colleges/{collegeId}": {
            "get": {
                "tags": [
                    "Colleges"
                ],
                "summary": "Get college base info",
                "operationId": "collegeBaseInfo",
                "description": "Gets base information from a specific college",
                "parameters": [
                    {
                        "name": "collegeId",
                        "in": "path",
                        "description": "Unique ID (mcocid) for MCO college",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Cache-Control",
                        "in": "header",
                        "description": "Informs the service that it should skip cache reading (no-cache), writing (no-store) or both in this request",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no-cache",
                                "no-store",
                                "no-cache no-store"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mcocid": {
                                            "type": "integer",
                                            "example": 792
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "CollegeName"
                                        },
                                        "nickname": {
                                            "type": "string",
                                            "example": "CollegeNickname"
                                        },
                                        "fice": {
                                            "type": "string",
                                            "example": "1525134"
                                        },
                                        "ug_inst_id": {
                                            "type": "string",
                                            "example": "collegeinsta"
                                        },
                                        "ipeds_id": {
                                            "type": "string",
                                            "default": "234525"
                                        },
                                        "address_1": {
                                            "type": "string",
                                            "default": "CollegeAddress1"
                                        },
                                        "address_2": {
                                            "type": "string",
                                            "default": "CollegeAddress2"
                                        },
                                        "city": {
                                            "type": "string",
                                            "default": "CollegeCity"
                                        },
                                        "state": {
                                            "type": "string",
                                            "default": "CS"
                                        },
                                        "zip": {
                                            "type": "string",
                                            "default": "12345"
                                        },
                                        "country": {
                                            "type": "string",
                                            "default": "CollegeCountry"
                                        },
                                        "urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "M",
                                                            "I",
                                                            "S",
                                                            "A",
                                                            "B"
                                                        ]
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "www.example.com"
                                                    },
                                                    "type_desc": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Main",
                                                            "Inquiry",
                                                            "Schedule Visit",
                                                            "Apply",
                                                            "Admissions Blog"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "Expires": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "The expiration date for a given requested resource, only when obtained from the cache"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing college id param"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "College not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/report/users": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get all active encourage users report",
                "operationId": "reportUsers",
                "description": "Gets detailed list of active UMS users who are using encourage",
                "parameters": [
                    {
                        "name": "Cache-Control",
                        "in": "header",
                        "description": "Informs the service that it should skip cache reading (no-cache), writing (no-store) or both in this request",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no-cache",
                                "no-store",
                                "no-cache no-store"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "minimum": 1
                        },
                        "required": false,
                        "description": "Size limit for returned array"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "required": false,
                        "description": "Offset for the data to be returned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "createdBy": {
                                                        "type": "string"
                                                    },
                                                    "attribute": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "value"
                                                            ]
                                                        }
                                                    },
                                                    "application": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "organizations": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "uid": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "role": {
                                                                    "type": "string",
                                                                    "nullable": true
                                                                },
                                                                "hsId": {
                                                                    "type": "string",
                                                                    "nullable": true
                                                                },
                                                                "contactId": {
                                                                    "type": "string",
                                                                    "nullable": true
                                                                }
                                                            },
                                                            "required": [
                                                                "uid",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "modules": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "verifiedDate": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "lastLoginDate": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "uid",
                                                "firstName",
                                                "lastName",
                                                "email",
                                                "status",
                                                "createdAt",
                                                "createdBy",
                                                "attributes",
                                                "organizations",
                                                "modules",
                                                "verifiedDate"
                                            ]
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "properties",
                                        "total"
                                    ]
                                }
                            }
                        },
                        "headers": {
                            "Expires": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "The expiration date for a given requested resource, only when obtained from the cache"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "jwt expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "umsApplicationTiny": {
                "type": "object",
                "properties": {
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "key": {
                                    "type": "string"
                                },
                                "permissionOverwrite": {
                                    "type": "boolean"
                                },
                                "attributesOverwrite": {
                                    "type": "object",
                                    "required": [
                                        "key"
                                    ],
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "tempore"
                                        },
                                        "value": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "key": {
                        "type": "string",
                        "example": "Encourage"
                    }
                }
            },
            "umsApplication": {
                "type": "object",
                "properties": {
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "key": {
                                    "type": "string"
                                },
                                "permissionOverwrite": {
                                    "type": "boolean"
                                },
                                "attributesOverwrite": {
                                    "type": "object",
                                    "required": [
                                        "key"
                                    ],
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "tempore"
                                        },
                                        "value": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "key": {
                        "type": "string",
                        "example": "Encourage"
                    },
                    "uid": {
                        "type": "string",
                        "example": "ec9ac895-814b-4a68-8577-2b19dcb257b3"
                    },
                    "name": {
                        "type": "string",
                        "example": "Encourage"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "PendingApproval"
                        ],
                        "example": "Active"
                    },
                    "attributes": {
                        "type": "object",
                        "required": [
                            "key"
                        ],
                        "properties": {
                            "key": {
                                "type": "string",
                                "example": "tempore"
                            },
                            "value": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "umsAttributeSmall": {
                "type": "object",
                "required": [
                    "key"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "tempore"
                    },
                    "value": {
                        "type": "object"
                    }
                }
            },
            "umsCredential": {
                "type": "object",
                "properties": {
                    "authorize": {
                        "type": "boolean",
                        "example": true
                    },
                    "credentials": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "type": {
                                "type": "string",
                                "example": "testUser"
                            },
                            "userName": {
                                "type": "string",
                                "example": "testUserName"
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            },
                            "email": {
                                "type": "string",
                                "example": "testUserEmail"
                            },
                            "status": {
                                "type": "string",
                                "example": "Active"
                            },
                            "exp": {
                                "type": "integer"
                            },
                            "iss": {
                                "type": "string"
                            },
                            "organizations": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "NitzscheandSons"
                                        }
                                    }
                                }
                            },
                            "roles": {
                                "type": "array",
                                "example": []
                            }
                        }
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "example": "tempore"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "umsModule": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "permissionOverwrite": {
                        "type": "boolean"
                    },
                    "attributesOverwrite": {
                        "type": "object",
                        "required": [
                            "key"
                        ],
                        "properties": {
                            "key": {
                                "type": "string",
                                "example": "tempore"
                            },
                            "value": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "umsOrganization": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Organization",
                            "OrgType"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "example": "NitzscheandSons"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending"
                        ],
                        "example": "Pending"
                    },
                    "sfAccountId": {
                        "type": "string",
                        "example": "0016000000ImzzJAAR"
                    },
                    "externalId": {
                        "type": "string",
                        "example": "003422"
                    },
                    "actCode": {
                        "type": "string",
                        "example": "0011"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-06-21T16:36:08.039Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-06-21T16:36:08.039Z"
                    },
                    "programs": {
                        "type": "array",
                        "items": {}
                    },
                    "group": {},
                    "parent": {},
                    "creator": {},
                    "users": {
                        "type": "array",
                        "items": {}
                    },
                    "applications": {
                        "type": "array",
                        "items": {}
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "example": "tempore"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "umsOrganizationSmall": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample University"
                    },
                    "fice": {
                        "type": "string",
                        "example": "SAMPLE"
                    },
                    "stateCode": {
                        "type": "string",
                        "example": "MO"
                    }
                }
            },
            "umsPermissionSmall": {
                "type": "object",
                "required": [
                    "moduleKey"
                ],
                "properties": {
                    "moduleKey": {
                        "type": "string",
                        "example": "encourage.engagementanalytics.marketingconversion"
                    },
                    "permissionOverwrite": {
                        "type": "boolean",
                        "example": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "example": "tempore"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "umsRole": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                    },
                    "roleName": {
                        "type": "string",
                        "example": "Administrator"
                    }
                }
            },
            "umsSessionToken": {
                "type": "string",
                "format": "byte",
                "example": "Base64 string"
            },
            "umsExternalId": {
                "type": "object",
                "required": [
                    "uid",
                    "userUid",
                    "source",
                    "externalId"
                ],
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "aaaa-bbbbb-ccccc-ddddd",
                        "description": "UMS unique identifier for the external ID entity"
                    },
                    "userUid": {
                        "type": "string",
                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                    },
                    "organizationUid": {
                        "type": "string",
                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                        "description": "Optional property if the external ID for the user is related to an org"
                    },
                    "source": {
                        "type": "string",
                        "example": "contact_id"
                    },
                    "externalId": {
                        "type": "string",
                        "example": "HCSXFXYZ"
                    }
                }
            },
            "umsUserOrganization": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-06-21T16:36:08.039Z"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-06-21T16:36:08.039Z"
                        },
                        "attributes": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "key"
                                ],
                                "properties": {
                                    "key": {
                                        "type": "string",
                                        "example": "tempore"
                                    },
                                    "value": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Primary",
                                "Secondary",
                                "Admin"
                            ]
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "User",
                                    "default": "User",
                                    "enum": [
                                        "LdapUser",
                                        "Role",
                                        "User"
                                    ]
                                },
                                "firstName": {
                                    "type": "string",
                                    "example": "testUserFirstName"
                                },
                                "lastName": {
                                    "type": "string",
                                    "example": "testUserLastName"
                                },
                                "userName": {
                                    "type": "string",
                                    "example": "testUserName"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "Active",
                                    "enum": [
                                        "Active",
                                        "Inactive",
                                        "Pending",
                                        "Disabled"
                                    ]
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "test@user.mail"
                                },
                                "verifiedDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-01-07T18:29:25.493Z"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-01-07T18:29:25.493Z"
                                },
                                "externalIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "uid",
                                            "userUid",
                                            "source",
                                            "externalId"
                                        ],
                                        "properties": {
                                            "uid": {
                                                "type": "string",
                                                "example": "aaaa-bbbbb-ccccc-ddddd",
                                                "description": "UMS unique identifier for the external ID entity"
                                            },
                                            "userUid": {
                                                "type": "string",
                                                "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                            },
                                            "organizationUid": {
                                                "type": "string",
                                                "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                "description": "Optional property if the external ID for the user is related to an org"
                                            },
                                            "source": {
                                                "type": "string",
                                                "example": "contact_id"
                                            },
                                            "externalId": {
                                                "type": "string",
                                                "example": "HCSXFXYZ"
                                            }
                                        }
                                    }
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "uid": {
                                                "type": "string",
                                                "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                            },
                                            "roleName": {
                                                "type": "string",
                                                "example": "Administrator"
                                            }
                                        }
                                    }
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "key"
                                        ],
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "example": "tempore"
                                            },
                                            "value": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "organization": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "Organization",
                                        "OrgType"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "example": "NitzscheandSons"
                                }
                            }
                        }
                    }
                }
            },
            "creator": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    }
                }
            },
            "user": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                    },
                    "type": {
                        "type": "string",
                        "example": "User",
                        "default": "User",
                        "enum": [
                            "LdapUser",
                            "Role",
                            "User"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "userName": {
                        "type": "string",
                        "example": "testUserName"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending",
                            "Disabled"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    },
                    "verifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "externalIds": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "uid",
                                "userUid",
                                "source",
                                "externalId"
                            ],
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "aaaa-bbbbb-ccccc-ddddd",
                                    "description": "UMS unique identifier for the external ID entity"
                                },
                                "userUid": {
                                    "type": "string",
                                    "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                },
                                "organizationUid": {
                                    "type": "string",
                                    "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                    "description": "Optional property if the external ID for the user is related to an org"
                                },
                                "source": {
                                    "type": "string",
                                    "example": "contact_id"
                                },
                                "externalId": {
                                    "type": "string",
                                    "example": "HCSXFXYZ"
                                }
                            }
                        }
                    },
                    "creator": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            }
                        }
                    },
                    "versionWarning": {
                        "type": "boolean",
                        "example": "false",
                        "default": "false"
                    },
                    "application": {
                        "type": "object",
                        "properties": {
                            "modules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "key": {
                                            "type": "string"
                                        },
                                        "permissionOverwrite": {
                                            "type": "boolean"
                                        },
                                        "attributesOverwrite": {
                                            "type": "object",
                                            "required": [
                                                "key"
                                            ],
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "example": "tempore"
                                                },
                                                "value": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "key": {
                                "type": "string",
                                "example": "Encourage"
                            }
                        }
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "Organization",
                                        "OrgType"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "example": "NitzscheandSons"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Active",
                                        "Inactive",
                                        "Pending"
                                    ],
                                    "example": "Pending"
                                },
                                "sfAccountId": {
                                    "type": "string",
                                    "example": "0016000000ImzzJAAR"
                                },
                                "externalId": {
                                    "type": "string",
                                    "example": "003422"
                                },
                                "actCode": {
                                    "type": "string",
                                    "example": "0011"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2017-06-21T16:36:08.039Z"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2017-06-21T16:36:08.039Z"
                                },
                                "programs": {
                                    "type": "array",
                                    "items": {}
                                },
                                "group": {},
                                "parent": {},
                                "creator": {},
                                "users": {
                                    "type": "array",
                                    "items": {}
                                },
                                "applications": {
                                    "type": "array",
                                    "items": {}
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "key"
                                        ],
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "example": "tempore"
                                            },
                                            "value": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                },
                                "roleName": {
                                    "type": "string",
                                    "example": "Administrator"
                                }
                            }
                        }
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "example": "tempore"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "userBase": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                    },
                    "type": {
                        "type": "string",
                        "example": "User",
                        "default": "User",
                        "enum": [
                            "LdapUser",
                            "Role",
                            "User"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "userName": {
                        "type": "string",
                        "example": "testUserName"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending",
                            "Disabled"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    },
                    "verifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "externalIds": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "uid",
                                "userUid",
                                "source",
                                "externalId"
                            ],
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "aaaa-bbbbb-ccccc-ddddd",
                                    "description": "UMS unique identifier for the external ID entity"
                                },
                                "userUid": {
                                    "type": "string",
                                    "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                },
                                "organizationUid": {
                                    "type": "string",
                                    "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                    "description": "Optional property if the external ID for the user is related to an org"
                                },
                                "source": {
                                    "type": "string",
                                    "example": "contact_id"
                                },
                                "externalId": {
                                    "type": "string",
                                    "example": "HCSXFXYZ"
                                }
                            }
                        }
                    },
                    "creator": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            }
                        }
                    },
                    "versionWarning": {
                        "type": "boolean",
                        "example": "false",
                        "default": "false"
                    }
                }
            },
            "userSmall": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                    },
                    "type": {
                        "type": "string",
                        "example": "User",
                        "default": "User",
                        "enum": [
                            "LdapUser",
                            "Role",
                            "User"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "userName": {
                        "type": "string",
                        "example": "testUserName"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending",
                            "Disabled"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    }
                }
            },
            "userCreateRequest": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "email"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "User",
                        "default": "User",
                        "enum": [
                            "LdapUser",
                            "Role",
                            "User"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "userName": {
                        "type": "string",
                        "example": "testUserName"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending",
                            "Disabled"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "example": "tempore"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "moduleKey"
                            ],
                            "properties": {
                                "moduleKey": {
                                    "type": "string",
                                    "example": "encourage.engagementanalytics.marketingconversion"
                                },
                                "permissionOverwrite": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "key"
                                        ],
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "example": "tempore"
                                            },
                                            "value": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                },
                                "roleName": {
                                    "type": "string",
                                    "example": "Administrator"
                                }
                            }
                        }
                    }
                }
            },
            "userImpersonateResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "type": {
                                "type": "string",
                                "example": "User",
                                "default": "User",
                                "enum": [
                                    "LdapUser",
                                    "Role",
                                    "User"
                                ]
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            },
                            "userName": {
                                "type": "string",
                                "example": "testUserName"
                            },
                            "status": {
                                "type": "string",
                                "example": "Active",
                                "enum": [
                                    "Active",
                                    "Inactive",
                                    "Pending",
                                    "Disabled"
                                ]
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "test@user.mail"
                            },
                            "verifiedDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "creator": {
                                "type": "object",
                                "properties": {
                                    "uid": {
                                        "type": "string",
                                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    }
                                }
                            },
                            "versionWarning": {
                                "type": "boolean",
                                "example": "false",
                                "default": "false"
                            },
                            "application": {
                                "type": "object",
                                "properties": {
                                    "modules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "key": {
                                                    "type": "string"
                                                },
                                                "permissionOverwrite": {
                                                    "type": "boolean"
                                                },
                                                "attributesOverwrite": {
                                                    "type": "object",
                                                    "required": [
                                                        "key"
                                                    ],
                                                    "properties": {
                                                        "key": {
                                                            "type": "string",
                                                            "example": "tempore"
                                                        },
                                                        "value": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "key": {
                                        "type": "string",
                                        "example": "Encourage"
                                    }
                                }
                            },
                            "organizations": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "Organization",
                                                "OrgType"
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "NitzscheandSons"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending"
                                            ],
                                            "example": "Pending"
                                        },
                                        "sfAccountId": {
                                            "type": "string",
                                            "example": "0016000000ImzzJAAR"
                                        },
                                        "externalId": {
                                            "type": "string",
                                            "example": "003422"
                                        },
                                        "actCode": {
                                            "type": "string",
                                            "example": "0011"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2017-06-21T16:36:08.039Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2017-06-21T16:36:08.039Z"
                                        },
                                        "programs": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "group": {},
                                        "parent": {},
                                        "creator": {},
                                        "users": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "applications": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                        },
                                        "roleName": {
                                            "type": "string",
                                            "example": "Administrator"
                                        }
                                    }
                                }
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "key"
                                    ],
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "tempore"
                                        },
                                        "value": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "impersonatingUser": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "type": {
                                "type": "string",
                                "example": "User",
                                "default": "User",
                                "enum": [
                                    "LdapUser",
                                    "Role",
                                    "User"
                                ]
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            },
                            "userName": {
                                "type": "string",
                                "example": "testUserName"
                            },
                            "status": {
                                "type": "string",
                                "example": "Active",
                                "enum": [
                                    "Active",
                                    "Inactive",
                                    "Pending",
                                    "Disabled"
                                ]
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "test@user.mail"
                            },
                            "verifiedDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "creator": {
                                "type": "object",
                                "properties": {
                                    "uid": {
                                        "type": "string",
                                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "testUserFirstName"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "testUserLastName"
                                    }
                                }
                            },
                            "versionWarning": {
                                "type": "boolean",
                                "example": "false",
                                "default": "false"
                            },
                            "application": {
                                "type": "object",
                                "properties": {
                                    "modules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "uid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "key": {
                                                    "type": "string"
                                                },
                                                "permissionOverwrite": {
                                                    "type": "boolean"
                                                },
                                                "attributesOverwrite": {
                                                    "type": "object",
                                                    "required": [
                                                        "key"
                                                    ],
                                                    "properties": {
                                                        "key": {
                                                            "type": "string",
                                                            "example": "tempore"
                                                        },
                                                        "value": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "key": {
                                        "type": "string",
                                        "example": "Encourage"
                                    }
                                }
                            },
                            "organizations": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "Organization",
                                                "OrgType"
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "NitzscheandSons"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending"
                                            ],
                                            "example": "Pending"
                                        },
                                        "sfAccountId": {
                                            "type": "string",
                                            "example": "0016000000ImzzJAAR"
                                        },
                                        "externalId": {
                                            "type": "string",
                                            "example": "003422"
                                        },
                                        "actCode": {
                                            "type": "string",
                                            "example": "0011"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2017-06-21T16:36:08.039Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2017-06-21T16:36:08.039Z"
                                        },
                                        "programs": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "group": {},
                                        "parent": {},
                                        "creator": {},
                                        "users": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "applications": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "key"
                                                ],
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "example": "tempore"
                                                    },
                                                    "value": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                        },
                                        "roleName": {
                                            "type": "string",
                                            "example": "Administrator"
                                        }
                                    }
                                }
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "key"
                                    ],
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "tempore"
                                        },
                                        "value": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "sessionToken": {
                        "type": "string",
                        "format": "byte",
                        "example": "Base64 string"
                    }
                }
            },
            "userUpdate": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "cell_phone": {
                        "type": "string",
                        "example": "2025550152"
                    },
                    "fax_phone": {
                        "type": "string",
                        "example": "2025550152"
                    }
                }
            },
            "userPermissions": {
                "type": "object",
                "properties": {
                    "organization": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Organization",
                                    "OrgType"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "example": "NitzscheandSons"
                            },
                            "externalId": {
                                "type": "string",
                                "example": "003422"
                            },
                            "role": {
                                "type": "string",
                                "example": "teacher"
                            }
                        }
                    },
                    "permissions": {
                        "type": "object",
                        "properties": {
                            "applicationManagement": {
                                "type": "boolean"
                            },
                            "credentialSubmission": {
                                "type": "boolean"
                            },
                            "highSchoolAdmin": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "userMcoSetup": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "prefix": {
                        "type": "string",
                        "example": "Mr."
                    }
                },
                "required": [
                    "firstName",
                    "lastName"
                ]
            },
            "userActivationStatusResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending",
                            "Disabled"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    }
                }
            },
            "student": {
                "type": "object",
                "properties": {
                    "student_key": {
                        "type": "string",
                        "example": "576173212",
                        "description": "This is the primary key"
                    },
                    "entity_type_key": {
                        "type": "integer",
                        "example": 3
                    },
                    "sequence_number": {
                        "type": "string",
                        "example": "34653"
                    },
                    "username": {
                        "type": "string",
                        "example": "user@ma.il"
                    },
                    "last_activity_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T19:01:01.088Z"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@ma.il"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "UserFirstName"
                    },
                    "middle_name": {
                        "type": "string",
                        "example": "UserMiddleName"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "UserLastName"
                    },
                    "gender": {
                        "type": "string",
                        "example": "F"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1996-05-23T00:00:00.000Z"
                    },
                    "graduation_year": {
                        "type": "integer",
                        "example": 2018
                    },
                    "high_school": {
                        "type": "object",
                        "properties": {
                            "hs_id": {
                                "type": "string",
                                "example": "userHighSchoolId"
                            },
                            "name": {
                                "type": "string",
                                "example": "userHighSchoolName"
                            }
                        }
                    },
                    "relationship_type_keys": {
                        "type": "array",
                        "example": [
                            8
                        ]
                    },
                    "answers": {
                        "type": "object",
                        "example": {}
                    },
                    "is_approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_auto_login": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_active_login": {
                        "type": "boolean",
                        "example": true
                    },
                    "address_1": {
                        "type": "string",
                        "example": "Street, 250"
                    },
                    "address_2": {
                        "type": "string",
                        "example": "Street, 250"
                    },
                    "zip": {
                        "type": "string",
                        "example": "111111"
                    },
                    "state": {
                        "type": "string",
                        "example": "TX"
                    },
                    "city": {
                        "type": "string",
                        "example": "Austin"
                    },
                    "is_valid_address": {
                        "type": "boolean",
                        "example": true
                    },
                    "cell_phone": {
                        "type": "string",
                        "example": "55511234"
                    },
                    "home_phone": {
                        "type": "string",
                        "example": "55511234"
                    },
                    "parents": {
                        "type": "object",
                        "properties": {
                            "one": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                }
                            },
                            "two": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "studentSearch": {
                "type": "object",
                "properties": {
                    "student_key": {
                        "type": "string",
                        "example": "576173212",
                        "description": "This is the primary key"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "UserFirstName"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "UserLastName"
                    },
                    "graduation_year": {
                        "type": "integer",
                        "example": 2018
                    }
                }
            },
            "checklistItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 27
                    },
                    "is_visible": {
                        "type": "boolean",
                        "default": false,
                        "example": true
                    },
                    "title": {
                        "type": "string",
                        "example": "Checklist item title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Checklist item description"
                    },
                    "link": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://some.link.here"
                    },
                    "deadline": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-09-24T01:38:17.690Z"
                    },
                    "high_school_grade": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4,
                        "example": 2
                    },
                    "semester": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 2,
                        "example": 2
                    },
                    "is_athlete": {
                        "type": "boolean",
                        "default": false,
                        "example": true
                    },
                    "is_first_gen": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-24T01:38:17.690Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-06-28T03:34:54.191Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2,
                        "example": 1
                    },
                    "status_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-06-28T03:34:54.191Z"
                    },
                    "personal_notes": {
                        "type": "string",
                        "example": "Checklist item personal notes"
                    }
                }
            },
            "testScores": {
                "type": "object",
                "properties": {
                    "gpa": {
                        "type": "object",
                        "properties": {
                            "total_score": {
                                "type": "number",
                                "format": "float",
                                "minimum": 0,
                                "maximum": 4,
                                "example": 3.9
                            },
                            "min_total_score": {
                                "type": "number",
                                "example": 0
                            },
                            "max_total_score": {
                                "type": "number",
                                "example": 4
                            }
                        }
                    },
                    "act": {
                        "type": "object",
                        "properties": {
                            "english": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 36,
                                "example": 34
                            },
                            "math": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 36,
                                "example": 34
                            },
                            "reading": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 36,
                                "example": 34
                            },
                            "science": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 36,
                                "example": 34
                            },
                            "total_score": {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 36,
                                "example": 34
                            },
                            "min_score": {
                                "type": "number",
                                "example": 1
                            },
                            "max_score": {
                                "type": "number",
                                "example": 35
                            },
                            "min_total_score": {
                                "type": "number",
                                "example": 1
                            },
                            "max_total_score": {
                                "type": "number",
                                "example": 35
                            }
                        }
                    },
                    "sat": {
                        "type": "object",
                        "properties": {
                            "math": {
                                "type": "number",
                                "minimum": 200,
                                "maximum": 800,
                                "example": 700
                            },
                            "reading_writing": {
                                "type": "number",
                                "minimum": 200,
                                "maximum": 800,
                                "example": 700
                            },
                            "total_score": {
                                "type": "number",
                                "minimum": 1500,
                                "maximum": 400,
                                "example": 1600
                            },
                            "min_score": {
                                "type": "number",
                                "example": 200
                            },
                            "max_score": {
                                "type": "number",
                                "example": 800
                            },
                            "min_total_score": {
                                "type": "number",
                                "example": 400
                            },
                            "max_total_score": {
                                "type": "number",
                                "example": 1600
                            }
                        }
                    },
                    "psat": {
                        "type": "object",
                        "properties": {
                            "math": {
                                "type": "number",
                                "minimum": 200,
                                "maximum": 800,
                                "example": 700
                            },
                            "reading_writing": {
                                "type": "number",
                                "minimum": 200,
                                "maximum": 800,
                                "example": 700
                            },
                            "total_score": {
                                "type": "number",
                                "minimum": 1500,
                                "maximum": 400,
                                "example": 1600
                            },
                            "min_score": {
                                "type": "number",
                                "example": 200
                            },
                            "max_score": {
                                "type": "number",
                                "example": 800
                            },
                            "min_total_score": {
                                "type": "number",
                                "example": 400
                            },
                            "max_total_score": {
                                "type": "number",
                                "example": 1600
                            }
                        }
                    }
                }
            },
            "surveyAnswers": {
                "type": "object",
                "properties": {
                    "ANSWER_1": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ANSWER_2": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ANSWER_n": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "userSchool": {
                "type": "object",
                "properties": {
                    "student_key": {
                        "type": "string",
                        "example": "102482975"
                    },
                    "school_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "application_status_key": {
                        "type": "string",
                        "enum": [
                            "INITIAL",
                            "APPLYING_0",
                            "APPLYING_25",
                            "APPLYING_50",
                            "APPLYING_75",
                            "APPLIED",
                            "ACCEPTED",
                            "NOT_ACCEPTED",
                            "ENROLLING",
                            "NOT_ENROLLING",
                            "DEFERRED_WAITLISTED"
                        ]
                    },
                    "update_increment": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_bookmarked": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_declared": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_quickmatch": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_aos": {
                        "type": "boolean",
                        "example": false
                    },
                    "application_status": {
                        "type": "string",
                        "example": "applying"
                    },
                    "applying_percent": {
                        "type": "integer",
                        "example": 75
                    },
                    "school": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "CollegeName"
                            },
                            "nickname": {
                                "type": "string",
                                "example": "CollegeNickname"
                            },
                            "fice": {
                                "type": "string",
                                "example": "1525134"
                            },
                            "ug_inst_id": {
                                "type": "string",
                                "example": "collegeinsta"
                            },
                            "ipeds_id": {
                                "type": "string",
                                "default": "234525"
                            },
                            "address_1": {
                                "type": "string",
                                "default": "CollegeAddress1"
                            },
                            "address_2": {
                                "type": "string",
                                "default": "CollegeAddress2"
                            },
                            "city": {
                                "type": "string",
                                "default": "CollegeCity"
                            },
                            "state": {
                                "type": "string",
                                "default": "CS"
                            },
                            "zip": {
                                "type": "string",
                                "default": "12345"
                            },
                            "country": {
                                "type": "string",
                                "default": "CollegeCountry"
                            },
                            "urls": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "M",
                                                "I",
                                                "S",
                                                "A",
                                                "B"
                                            ]
                                        },
                                        "value": {
                                            "type": "string",
                                            "example": "www.example.com"
                                        },
                                        "type_desc": {
                                            "type": "string",
                                            "enum": [
                                                "Main",
                                                "Inquiry",
                                                "Schedule Visit",
                                                "Apply",
                                                "Admissions Blog"
                                            ]
                                        }
                                    }
                                }
                            },
                            "has_campus_image_1x1": {
                                "type": "boolean"
                            },
                            "has_campus_image_16x9": {
                                "type": "boolean"
                            },
                            "slug_name": {
                                "type": "string",
                                "example": "test-university-1"
                            },
                            "images": {
                                "type": "object",
                                "properties": {
                                    "logo": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/logo.png"
                                    },
                                    "1x1_320": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "1x1_640": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "1x1_1076": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "1x1_1500": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "1x1_2048": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "16x9_320": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "16x9_640": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "16x9_1076": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "16x9_1500": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    },
                                    "16x9_2048": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.test.com/image.jpg"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "collegeMatches": {
                "type": "object",
                "properties": {
                    "matched_colleges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mcocid": {
                                    "type": "integer",
                                    "example": 792
                                },
                                "name": {
                                    "type": "string",
                                    "example": "CollegeName"
                                },
                                "nickname": {
                                    "type": "string",
                                    "example": "CollegeNickname"
                                },
                                "fice": {
                                    "type": "string",
                                    "example": "1525134"
                                },
                                "ug_inst_id": {
                                    "type": "string",
                                    "example": "collegeinsta"
                                },
                                "ipeds_id": {
                                    "type": "string",
                                    "default": "234525"
                                },
                                "address_1": {
                                    "type": "string",
                                    "default": "CollegeAddress1"
                                },
                                "address_2": {
                                    "type": "string",
                                    "default": "CollegeAddress2"
                                },
                                "city": {
                                    "type": "string",
                                    "default": "CollegeCity"
                                },
                                "state": {
                                    "type": "string",
                                    "default": "CS"
                                },
                                "zip": {
                                    "type": "string",
                                    "default": "12345"
                                },
                                "country": {
                                    "type": "string",
                                    "default": "CollegeCountry"
                                },
                                "urls": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "M",
                                                    "I",
                                                    "S",
                                                    "A",
                                                    "B"
                                                ]
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "www.example.com"
                                            },
                                            "type_desc": {
                                                "type": "string",
                                                "enum": [
                                                    "Main",
                                                    "Inquiry",
                                                    "Schedule Visit",
                                                    "Apply",
                                                    "Admissions Blog"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "declared_colleges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mcocid": {
                                    "type": "integer",
                                    "example": 792
                                },
                                "name": {
                                    "type": "string",
                                    "example": "CollegeName"
                                },
                                "nickname": {
                                    "type": "string",
                                    "example": "CollegeNickname"
                                },
                                "fice": {
                                    "type": "string",
                                    "example": "1525134"
                                },
                                "ug_inst_id": {
                                    "type": "string",
                                    "example": "collegeinsta"
                                },
                                "ipeds_id": {
                                    "type": "string",
                                    "default": "234525"
                                },
                                "address_1": {
                                    "type": "string",
                                    "default": "CollegeAddress1"
                                },
                                "address_2": {
                                    "type": "string",
                                    "default": "CollegeAddress2"
                                },
                                "city": {
                                    "type": "string",
                                    "default": "CollegeCity"
                                },
                                "state": {
                                    "type": "string",
                                    "default": "CS"
                                },
                                "zip": {
                                    "type": "string",
                                    "default": "12345"
                                },
                                "country": {
                                    "type": "string",
                                    "default": "CollegeCountry"
                                },
                                "urls": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "M",
                                                    "I",
                                                    "S",
                                                    "A",
                                                    "B"
                                                ]
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "www.example.com"
                                            },
                                            "type_desc": {
                                                "type": "string",
                                                "enum": [
                                                    "Main",
                                                    "Inquiry",
                                                    "Schedule Visit",
                                                    "Apply",
                                                    "Admissions Blog"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "aos_colleges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mcocid": {
                                    "type": "integer",
                                    "example": 792
                                },
                                "name": {
                                    "type": "string",
                                    "example": "CollegeName"
                                },
                                "nickname": {
                                    "type": "string",
                                    "example": "CollegeNickname"
                                },
                                "fice": {
                                    "type": "string",
                                    "example": "1525134"
                                },
                                "ug_inst_id": {
                                    "type": "string",
                                    "example": "collegeinsta"
                                },
                                "ipeds_id": {
                                    "type": "string",
                                    "default": "234525"
                                },
                                "address_1": {
                                    "type": "string",
                                    "default": "CollegeAddress1"
                                },
                                "address_2": {
                                    "type": "string",
                                    "default": "CollegeAddress2"
                                },
                                "city": {
                                    "type": "string",
                                    "default": "CollegeCity"
                                },
                                "state": {
                                    "type": "string",
                                    "default": "CS"
                                },
                                "zip": {
                                    "type": "string",
                                    "default": "12345"
                                },
                                "country": {
                                    "type": "string",
                                    "default": "CollegeCountry"
                                },
                                "urls": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "M",
                                                    "I",
                                                    "S",
                                                    "A",
                                                    "B"
                                                ]
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "www.example.com"
                                            },
                                            "type_desc": {
                                                "type": "string",
                                                "enum": [
                                                    "Main",
                                                    "Inquiry",
                                                    "Schedule Visit",
                                                    "Apply",
                                                    "Admissions Blog"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "scholarship": {
                "type": "object",
                "properties": {
                    "AMOUNT": {
                        "type": "string",
                        "example": "$1,000-$12,500"
                    },
                    "DEADLINE": {
                        "type": "string",
                        "example": "November 5"
                    },
                    "PATRON_NM": {
                        "type": "string",
                        "example": "U.S. Bank"
                    },
                    "SCHOL_NM": {
                        "type": "string",
                        "example": "U.S. Bank Scholarship Programme"
                    },
                    "SORT_YEAR": {
                        "type": "integer",
                        "example": 2019
                    },
                    "S_UUID": {
                        "type": "string",
                        "example": "EC15DE51-5323-063F-5ED1551B4543BB44"
                    },
                    "WEB_AMT": {
                        "type": "integer",
                        "example": 1250
                    },
                    "WEB_DAY": {
                        "type": "integer",
                        "example": 5
                    },
                    "WEB_MO": {
                        "type": "integer",
                        "example": 11
                    }
                }
            },
            "appMgtDetailsResponse": {
                "type": "object",
                "properties": {
                    "student": {
                        "type": "object",
                        "properties": {
                            "student_key": {
                                "type": "string",
                                "example": "576173212",
                                "description": "This is the primary key"
                            },
                            "first_name": {
                                "type": "string",
                                "example": "UserFirstName"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "UserLastName"
                            }
                        }
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "student_key": {
                                    "type": "string",
                                    "example": "102482975"
                                },
                                "school_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "application_status_key": {
                                    "type": "string",
                                    "enum": [
                                        "APPLYING_0",
                                        "APPLYING_25",
                                        "APPLYING_50",
                                        "APPLYING_75",
                                        "APPLIED",
                                        "ACCEPTED",
                                        "NOT_ACCEPTED",
                                        "ENROLLING",
                                        "NOT_ENROLLING",
                                        "DEFERRED_WAITLISTED"
                                    ]
                                },
                                "update_increment": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "is_bookmarked": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "is_declared": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "is_quickmatch": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "is_aos": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "application_status": {
                                    "type": "string",
                                    "example": "applying"
                                },
                                "applying_percent": {
                                    "type": "integer",
                                    "example": 75
                                },
                                "school": {
                                    "type": "object",
                                    "properties": {
                                        "urls": {
                                            "type": "object",
                                            "properties": {
                                                "main": {
                                                    "type": "string",
                                                    "example": "https://www.test.com"
                                                },
                                                "inquiry": {
                                                    "type": "string",
                                                    "example": "https://www.test.com"
                                                },
                                                "schedule_visit": {
                                                    "type": "string",
                                                    "example": "https://www.test.com"
                                                },
                                                "admissions_blog": {
                                                    "type": "string",
                                                    "example": "https://www.test.com"
                                                }
                                            }
                                        }
                                    }
                                },
                                "credentials": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "uid": {
                                                "type": "string",
                                                "example": "xxxx-xxxx-xxxx-xxxx",
                                                "description": "This is the primary key"
                                            },
                                            "export_id": {
                                                "type": "string",
                                                "example": "xxxx-xxxx-xxxx-xxxx"
                                            },
                                            "credential_type": {
                                                "type": "string",
                                                "enum": [
                                                    "final-transcript",
                                                    "interim-transcript",
                                                    "recommendation",
                                                    "application-essay",
                                                    "fee-waiver",
                                                    "personal-statement",
                                                    "portfolio-manuscript",
                                                    "resume",
                                                    "other"
                                                ]
                                            },
                                            "submitted_at": {
                                                "type": "string",
                                                "example": "1558984276791"
                                            },
                                            "first_export_date": {
                                                "type": "string",
                                                "example": "1558984276791"
                                            },
                                            "removed_by": {
                                                "type": "string",
                                                "example": "removedBy"
                                            }
                                        }
                                    }
                                },
                                "externalCredential": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "xxxx-xxxx-xxxx-xxxx",
                                            "description": "This is the primary key"
                                        },
                                        "studentKey": {
                                            "type": "string",
                                            "example": "15556777"
                                        },
                                        "fice": {
                                            "type": "string",
                                            "example": "123778"
                                        },
                                        "submissionDate": {
                                            "type": "string",
                                            "example": "1558984276791"
                                        },
                                        "submittedBy": {
                                            "type": "string",
                                            "example": "xxxx-xxxx-xxxx-xxxx"
                                        },
                                        "removed_by": {
                                            "type": "string",
                                            "example": "removedBy"
                                        }
                                    }
                                },
                                "isSupported": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "dataGen": {
                "type": "object",
                "properties": {
                    "profile": {
                        "type": "object",
                        "properties": {
                            "first_name": {
                                "type": "string",
                                "example": "Userfirstname"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Userlastname"
                            },
                            "graduation_year": {
                                "type": "string",
                                "example": "2018"
                            },
                            "address_one": {
                                "type": "string",
                                "example": "Woodside Lane"
                            },
                            "zip_code": {
                                "type": "string",
                                "example": "92345"
                            },
                            "is_valid_address": {
                                "type": "boolean",
                                "example": false
                            },
                            "high_school_id": {
                                "type": "string",
                                "example": "HS1234"
                            },
                            "high_school": {
                                "type": "string",
                                "example": "California High School"
                            },
                            "is_survey_complete": {
                                "type": "string",
                                "example": "true"
                            },
                            "user_type": {
                                "type": "string",
                                "default": "student",
                                "example": "high-school"
                            },
                            "high_school_country": {
                                "type": "string",
                                "example": "usa"
                            },
                            "college_start_year": {
                                "type": "string",
                                "example": "2019"
                            },
                            "country": {
                                "type": "string",
                                "example": "United States of America"
                            }
                        }
                    },
                    "personal_story": {
                        "type": "object",
                        "properties": {
                            "parents_went_college": {
                                "type": "string",
                                "description": "Boolean but stringified",
                                "example": "true"
                            }
                        }
                    },
                    "student_key": {
                        "type": "string",
                        "example": "576173212"
                    },
                    "authentication_id": {
                        "type": "string",
                        "example": "28930FA2-B0E5-463F-9A9E-9B61001243B1"
                    },
                    "last_activity_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T19:01:01.088Z"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@ma.il"
                    },
                    "seq_num": {
                        "type": "string",
                        "example": "576173212"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1996-05-23T00:00:00.000Z"
                    },
                    "username": {
                        "type": "string",
                        "example": "user@ma.il",
                        "deprecated": true
                    },
                    "tos_agreed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-11-29T11:25:13.000Z"
                    },
                    "user_type": {
                        "type": "string",
                        "default": "student",
                        "example": "high-school"
                    },
                    "bearer_token": {
                        "type": "string",
                        "example": "JF83HF73H21D0GJ3W9W02F29"
                    },
                    "facebook_id": {
                        "type": "string",
                        "example": "fbidstring",
                        "deprecated": true
                    },
                    "twitter_id": {
                        "type": "string",
                        "example": "twidstring",
                        "deprecated": true
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T20:11:00.014Z"
                    },
                    "referred_by_code": {
                        "type": "string"
                    },
                    "gpa": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 4,
                        "default": 0,
                        "example": 4
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": false
                    },
                    "admittedly_score": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 0,
                        "example": 95
                    },
                    "is_tutorial_completed": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "is_profile_public": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "tutorial_step": {
                        "type": "string",
                        "default": ""
                    },
                    "update_increment": {
                        "type": "integer",
                        "default": 0,
                        "example": 12
                    },
                    "is_school_verified": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "personal_color": {
                        "type": "string"
                    },
                    "profile_completion": {
                        "type": "number",
                        "format": "float",
                        "default": 0,
                        "example": 0.75
                    },
                    "subscription_expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T00:00:00.000Z"
                    },
                    "from_mo": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "old_password_format": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "onboarding_status": {
                        "type": "string",
                        "default": "INITIAL",
                        "enum": [
                            "INITIAL",
                            "STARTED"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T19:01:01.088Z"
                    },
                    "forum_posts_count": {
                        "type": "integer",
                        "default": 0,
                        "example": 3,
                        "deprecated": true
                    },
                    "forum_likes_count": {
                        "type": "integer",
                        "default": 0,
                        "example": 4,
                        "deprecated": true
                    },
                    "following_count": {
                        "type": "integer",
                        "default": 0,
                        "deprecated": true
                    },
                    "follower_count": {
                        "type": "integer",
                        "default": 0,
                        "deprecated": true
                    },
                    "has_unlimited_messages": {
                        "type": "boolean",
                        "default": false,
                        "deprecated": true
                    },
                    "surveyAnswers": {
                        "type": "object",
                        "properties": {
                            "PARENTCOL": {
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                    "type": "string",
                                    "example": "PARCOLYES"
                                }
                            },
                            "GRADYEAR": {
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                    "type": "string",
                                    "example": "HSGRAD2021"
                                }
                            },
                            "MOPFAFSA": {
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "MOPFAFSANOT",
                                        "MOPFAFSASTARTED",
                                        "MOPFAFSASUBMITTED",
                                        "MOPFAFSASELECTED",
                                        "MOPFAFSARESUBMITTED",
                                        "MOPFAFSAACCEPTED"
                                    ]
                                }
                            }
                        }
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "student_key": {
                                            "type": "string",
                                            "example": "102482975"
                                        },
                                        "school_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "application_status_key": {
                                            "type": "string",
                                            "enum": [
                                                "INITIAL",
                                                "APPLYING_0",
                                                "APPLYING_25",
                                                "APPLYING_50",
                                                "APPLYING_75",
                                                "APPLIED",
                                                "ACCEPTED",
                                                "NOT_ACCEPTED",
                                                "ENROLLING",
                                                "NOT_ENROLLING",
                                                "DEFERRED_WAITLISTED"
                                            ]
                                        },
                                        "update_increment": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "is_bookmarked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_declared": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_quickmatch": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "is_aos": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "application_status": {
                                            "type": "string",
                                            "example": "applying"
                                        },
                                        "applying_percent": {
                                            "type": "integer",
                                            "example": 75
                                        },
                                        "school": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "CollegeName"
                                                },
                                                "nickname": {
                                                    "type": "string",
                                                    "example": "CollegeNickname"
                                                },
                                                "fice": {
                                                    "type": "string",
                                                    "example": "1525134"
                                                },
                                                "ug_inst_id": {
                                                    "type": "string",
                                                    "example": "collegeinsta"
                                                },
                                                "ipeds_id": {
                                                    "type": "string",
                                                    "default": "234525"
                                                },
                                                "address_1": {
                                                    "type": "string",
                                                    "default": "CollegeAddress1"
                                                },
                                                "address_2": {
                                                    "type": "string",
                                                    "default": "CollegeAddress2"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "default": "CollegeCity"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "default": "CS"
                                                },
                                                "zip": {
                                                    "type": "string",
                                                    "default": "12345"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "default": "CollegeCountry"
                                                },
                                                "urls": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "M",
                                                                    "I",
                                                                    "S",
                                                                    "A",
                                                                    "B"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string",
                                                                "example": "www.example.com"
                                                            },
                                                            "type_desc": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Main",
                                                                    "Inquiry",
                                                                    "Schedule Visit",
                                                                    "Apply",
                                                                    "Admissions Blog"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "has_campus_image_1x1": {
                                                    "type": "boolean"
                                                },
                                                "has_campus_image_16x9": {
                                                    "type": "boolean"
                                                },
                                                "slug_name": {
                                                    "type": "string",
                                                    "example": "test-university-1"
                                                },
                                                "images": {
                                                    "type": "object",
                                                    "properties": {
                                                        "logo": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/logo.png"
                                                        },
                                                        "1x1_320": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "1x1_640": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "1x1_1076": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "1x1_1500": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "1x1_2048": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "16x9_320": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "16x9_640": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "16x9_1076": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "16x9_1500": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        },
                                                        "16x9_2048": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "example": "https://www.test.com/image.jpg"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "school_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "College not found"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "checklist": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "updatedChecklistIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 42
                                        }
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 27
                                                },
                                                "is_visible": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "example": true
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Checklist item title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Checklist item description"
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://some.link.here"
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-09-24T01:38:17.690Z"
                                                },
                                                "high_school_grade": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 4,
                                                    "example": 2
                                                },
                                                "semester": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "maximum": 2,
                                                    "example": 2
                                                },
                                                "is_athlete": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "example": true
                                                },
                                                "is_first_gen": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-24T01:38:17.690Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-06-28T03:34:54.191Z"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 2,
                                                    "example": 1
                                                },
                                                "status_updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-06-28T03:34:54.191Z"
                                                },
                                                "personal_notes": {
                                                    "type": "string",
                                                    "example": "Checklist item personal notes"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 27
                                        },
                                        "is_visible": {
                                            "type": "boolean",
                                            "default": false,
                                            "example": true
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Checklist item title"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Checklist item description"
                                        },
                                        "link": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://some.link.here"
                                        },
                                        "deadline": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-09-24T01:38:17.690Z"
                                        },
                                        "high_school_grade": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4,
                                            "example": 2
                                        },
                                        "semester": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 2,
                                            "example": 2
                                        },
                                        "is_athlete": {
                                            "type": "boolean",
                                            "default": false,
                                            "example": true
                                        },
                                        "is_first_gen": {
                                            "type": "boolean",
                                            "default": false,
                                            "example": false
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-24T01:38:17.690Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-06-28T03:34:54.191Z"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 2,
                                            "example": 1
                                        },
                                        "status_updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-06-28T03:34:54.191Z"
                                        },
                                        "personal_notes": {
                                            "type": "string",
                                            "example": "Checklist item personal notes"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "secondarySchool": {
                "type": "object",
                "properties": {
                    "hs_id": {
                        "type": "string",
                        "example": "HS021361"
                    },
                    "name": {
                        "type": "string",
                        "example": "Stanfield Johnson"
                    },
                    "city": {
                        "type": "string",
                        "example": "Stanfield"
                    },
                    "state": {
                        "type": "string",
                        "example": "WA"
                    },
                    "address_1": {
                        "type": "string",
                        "example": "3101 S Bagdad Rd"
                    },
                    "address_2": {
                        "type": "string",
                        "example": ""
                    },
                    "zip": {
                        "type": "string",
                        "example": "11222"
                    },
                    "zip4": {
                        "type": "string",
                        "example": "2328"
                    },
                    "usps_address_1": {
                        "type": "string",
                        "example": "3101 S Bagdad Rd"
                    },
                    "usps_address_2": {
                        "type": "string",
                        "example": ""
                    },
                    "usps_city": {
                        "type": "string",
                        "example": "Brooklyn"
                    },
                    "usps_state": {
                        "type": "string",
                        "example": "NY"
                    },
                    "usps_zip": {
                        "type": "string",
                        "example": "11222"
                    },
                    "district": {
                        "type": "object",
                        "properties": {
                            "hs_id": {
                                "type": "string",
                                "example": "HS021361"
                            },
                            "name": {
                                "type": "string",
                                "example": "Stanfield Johnson"
                            },
                            "city": {
                                "type": "string",
                                "example": "Stanfield"
                            },
                            "state": {
                                "type": "string",
                                "example": "WA"
                            },
                            "address_1": {
                                "type": "string",
                                "example": "3101 S Bagdad Rd"
                            },
                            "address_2": {
                                "type": "string",
                                "example": ""
                            },
                            "zip": {
                                "type": "string",
                                "example": "11222"
                            },
                            "zip4": {
                                "type": "string",
                                "example": "2328"
                            },
                            "usps_address_1": {
                                "type": "string",
                                "example": "3101 S Bagdad Rd"
                            },
                            "usps_address_2": {
                                "type": "string",
                                "example": ""
                            },
                            "usps_city": {
                                "type": "string",
                                "example": "Brooklyn"
                            },
                            "usps_state": {
                                "type": "string",
                                "example": "NY"
                            },
                            "usps_zip": {
                                "type": "string",
                                "example": "11222"
                            }
                        }
                    }
                }
            },
            "secondarySchoolUser": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "type": {
                                "type": "string",
                                "example": "User",
                                "default": "User",
                                "enum": [
                                    "LdapUser",
                                    "Role",
                                    "User"
                                ]
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            },
                            "userName": {
                                "type": "string",
                                "example": "testUserName"
                            },
                            "status": {
                                "type": "string",
                                "example": "Active",
                                "enum": [
                                    "Active",
                                    "Inactive",
                                    "Pending",
                                    "Disabled"
                                ]
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "test@user.mail"
                            },
                            "verifiedDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-01-07T18:29:25.493Z"
                            },
                            "externalIds": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "uid",
                                        "userUid",
                                        "source",
                                        "externalId"
                                    ],
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "aaaa-bbbbb-ccccc-ddddd",
                                            "description": "UMS unique identifier for the external ID entity"
                                        },
                                        "userUid": {
                                            "type": "string",
                                            "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                        },
                                        "organizationUid": {
                                            "type": "string",
                                            "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                            "description": "Optional property if the external ID for the user is related to an org"
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "contact_id"
                                        },
                                        "externalId": {
                                            "type": "string",
                                            "example": "HCSXFXYZ"
                                        }
                                    }
                                }
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                        },
                                        "roleName": {
                                            "type": "string",
                                            "example": "Administrator"
                                        }
                                    }
                                }
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "object",
                                                    "properties": {
                                                        "value": {
                                                            "type": "boolean"
                                                        },
                                                        "at": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "organization": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Organization",
                                    "OrgType"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "example": "NitzscheandSons"
                            }
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Primary",
                            "Secondary",
                            "Admin"
                        ]
                    },
                    "updatedAt": {
                        "type": "string",
                        "example": "2020-06-19T14:29:37.492Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "example": "2020-06-19T14:29:37.492Z"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "secondarySchoolUserList": {
                "type": "object",
                "properties": {
                    "userList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "User",
                                            "default": "User",
                                            "enum": [
                                                "LdapUser",
                                                "Role",
                                                "User"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "example": "testUserFirstName"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "testUserLastName"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "example": "testUserName"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Active",
                                            "enum": [
                                                "Active",
                                                "Inactive",
                                                "Pending",
                                                "Disabled"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@user.mail"
                                        },
                                        "verifiedDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2019-01-07T18:29:25.493Z"
                                        },
                                        "externalIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "uid",
                                                    "userUid",
                                                    "source",
                                                    "externalId"
                                                ],
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "aaaa-bbbbb-ccccc-ddddd",
                                                        "description": "UMS unique identifier for the external ID entity"
                                                    },
                                                    "userUid": {
                                                        "type": "string",
                                                        "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                                    },
                                                    "organizationUid": {
                                                        "type": "string",
                                                        "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                                        "description": "Optional property if the external ID for the user is related to an org"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "contact_id"
                                                    },
                                                    "externalId": {
                                                        "type": "string",
                                                        "example": "HCSXFXYZ"
                                                    }
                                                }
                                            }
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                                    },
                                                    "roleName": {
                                                        "type": "string",
                                                        "example": "Administrator"
                                                    }
                                                }
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "value": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "at": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "organization": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "example": "2e6dba3f-4916-469d-bb6e-01d2c67b2211"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "Organization",
                                                "OrgType"
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "NitzscheandSons"
                                        }
                                    }
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "Primary",
                                        "Secondary",
                                        "Admin"
                                    ]
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "example": "2020-06-19T14:29:37.492Z"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "example": "2020-06-19T14:29:37.492Z"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "adminCount": {
                        "type": "number",
                        "example": 2
                    }
                }
            },
            "secondarySchoolCreateRequest": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "role",
                    "permissions"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "counselor",
                            "principal",
                            "teacher",
                            "coach",
                            "teaching_assistant",
                            "superintendent",
                            "other"
                        ]
                    },
                    "prefix": {
                        "type": "string",
                        "enum": [
                            "mister",
                            "doctor",
                            "miss",
                            "misses"
                        ]
                    },
                    "permissions": {
                        "type": "object",
                        "properties": {
                            "applicationManagement": {
                                "type": "boolean",
                                "example": true
                            },
                            "credentialSubmission": {
                                "type": "boolean",
                                "example": false
                            },
                            "highSchoolAdmin": {
                                "type": "boolean",
                                "example": true
                            }
                        }
                    }
                }
            },
            "secondarySchoolEditRequest": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "enum": [
                            "counselor",
                            "principal",
                            "teacher",
                            "coach",
                            "teaching_assistant",
                            "superintendent",
                            "other"
                        ]
                    },
                    "permissions": {
                        "type": "object",
                        "properties": {
                            "applicationManagement": {
                                "type": "boolean",
                                "example": true
                            },
                            "credentialSubmission": {
                                "type": "boolean",
                                "example": false
                            },
                            "highSchoolAdmin": {
                                "type": "boolean",
                                "example": true
                            }
                        }
                    }
                }
            },
            "secondarySchoolUserRequest": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                    },
                    "type": {
                        "type": "string",
                        "example": "User",
                        "default": "User",
                        "enum": [
                            "LdapUser",
                            "Role",
                            "User"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "userName": {
                        "type": "string",
                        "example": "testUserName"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Pending",
                            "Disabled"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test@user.mail"
                    },
                    "verifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-01-07T18:29:25.493Z"
                    },
                    "externalIds": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "uid",
                                "userUid",
                                "source",
                                "externalId"
                            ],
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "aaaa-bbbbb-ccccc-ddddd",
                                    "description": "UMS unique identifier for the external ID entity"
                                },
                                "userUid": {
                                    "type": "string",
                                    "example": "82596c17-2e90-4321-8f67-c16e4a4ae646"
                                },
                                "organizationUid": {
                                    "type": "string",
                                    "example": "a80585ee-7e81-4d7c-8a75-4c2293243703",
                                    "description": "Optional property if the external ID for the user is related to an org"
                                },
                                "source": {
                                    "type": "string",
                                    "example": "contact_id"
                                },
                                "externalId": {
                                    "type": "string",
                                    "example": "HCSXFXYZ"
                                }
                            }
                        }
                    },
                    "creator": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                            },
                            "firstName": {
                                "type": "string",
                                "example": "testUserFirstName"
                            },
                            "lastName": {
                                "type": "string",
                                "example": "testUserLastName"
                            }
                        }
                    },
                    "permissions": {
                        "type": "object",
                        "properties": {
                            "applicationManagement": {
                                "type": "boolean",
                                "example": true
                            },
                            "credentialSubmission": {
                                "type": "boolean",
                                "example": false
                            },
                            "highSchoolAdmin": {
                                "type": "boolean",
                                "example": true
                            }
                        }
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "1e6c6d8e-af30-43ca-a519-395734701eba"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Sample University"
                                }
                            }
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "example": "bf45a23c-b527-4c5d-b7b8-60250339d265"
                                },
                                "roleName": {
                                    "type": "string",
                                    "example": "Administrator"
                                }
                            }
                        }
                    },
                    "prefix": {
                        "type": "string",
                        "enum": [
                            "doctor",
                            "mr",
                            "mrs",
                            "ms"
                        ]
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "counselor",
                            "principal",
                            "teacher",
                            "coach",
                            "teaching_assistant",
                            "superintendent",
                            "other"
                        ]
                    }
                }
            },
            "secondarySchoolCreateResponse": {
                "type": "object",
                "properties": {
                    "userUid": {
                        "type": "string",
                        "example": "aa112233-444a-55aa-a66a-3f7e7baaafa3"
                    },
                    "organizationUid": {
                        "type": "string",
                        "example": "aa112233-444a-55aa-a66a-3f7e7baaafa3"
                    },
                    "updatedAt": {
                        "type": "string",
                        "example": "2020-06-11T20:30:52.408Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "example": "2020-06-11T20:30:52.408Z"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "type": {
                        "type": "string",
                        "example": "Primary"
                    }
                }
            },
            "secondarySchoolReportPermissions": {
                "type": "object",
                "properties": {
                    "reportACTE": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportACTFL": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportCOF": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportDECA": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportFBLA": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportFCCLA": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportMAA": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportMCO": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportNABSE": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportNAFME": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportNCSS": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportSHAPE": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportSTEM": {
                        "type": "boolean",
                        "example": true
                    },
                    "reportSUPERINTENDENT": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "credential": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "xxxx-xxxx-xxxx-xxxx",
                        "description": "This is the primary key"
                    },
                    "export_id": {
                        "type": "string",
                        "example": "xxxx-xxxx-xxxx-xxxx"
                    },
                    "credential_type": {
                        "type": "string",
                        "enum": [
                            "final-transcript",
                            "interim-transcript",
                            "recommendation",
                            "application-essay",
                            "fee-waiver",
                            "personal-statement",
                            "portfolio-manuscript",
                            "resume",
                            "other"
                        ]
                    },
                    "submitted_at": {
                        "type": "string",
                        "example": "1558984276791"
                    },
                    "first_export_date": {
                        "type": "string",
                        "example": "1558984276791"
                    },
                    "removed_by": {
                        "type": "string",
                        "example": "removedBy"
                    },
                    "file": {
                        "type": "object",
                        "example": {
                            "display_name": "displayName"
                        }
                    },
                    "url": {
                        "type": "string",
                        "example": "http://credential.url.org/credentialidonaremotebucketthatcanbeanything"
                    }
                }
            },
            "exportedCredential": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string",
                        "example": "xxxx-xxxx-xxxx-xxxx",
                        "description": "This is the primary key"
                    },
                    "url": {
                        "type": "string",
                        "example": "http://credential.url.org/credentialidonaremotebucketthatcanbeanything"
                    }
                }
            },
            "createCredentialRequest": {
                "type": "object",
                "properties": {
                    "credentialToReplaceUid": {
                        "type": "string",
                        "example": "xxxx-xxx-xxxx-xxx"
                    },
                    "type": {
                        "type": "string",
                        "example": "final-transcript",
                        "enum": [
                            "final-transcript",
                            "interim-transcript",
                            "recommendation",
                            "application-essay",
                            "fee-waiver",
                            "personal-statement",
                            "portfolio-manuscript",
                            "resume",
                            "other"
                        ]
                    },
                    "displayName": {
                        "type": "string",
                        "example": "example.pdf"
                    }
                }
            },
            "createdCredential": {
                "type": "object",
                "properties": {
                    "credential": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "example": "xxxx-xxxx-xxxx-xxxx",
                                "description": "This is the primary key"
                            },
                            "export_id": {
                                "type": "string",
                                "example": "xxxx-xxxx-xxxx-xxxx"
                            },
                            "credential_type": {
                                "type": "string",
                                "enum": [
                                    "final-transcript",
                                    "interim-transcript",
                                    "recommendation",
                                    "application-essay",
                                    "fee-waiver",
                                    "personal-statement",
                                    "portfolio-manuscript",
                                    "resume",
                                    "other"
                                ]
                            },
                            "submitted_at": {
                                "type": "string",
                                "example": "1558984276791"
                            },
                            "first_export_date": {
                                "type": "string",
                                "example": "1558984276791"
                            },
                            "removed_by": {
                                "type": "string",
                                "example": "removedBy"
                            },
                            "file": {
                                "type": "object",
                                "example": {
                                    "display_name": "displayName"
                                }
                            }
                        }
                    },
                    "upload_url": {
                        "type": "string",
                        "example": "uploadUrl"
                    },
                    "upload_fields": {
                        "type": "object",
                        "properties": {
                            "fieldKey": {
                                "type": "string",
                                "example": "fieldValue"
                            }
                        }
                    }
                }
            },
            "college": {
                "type": "object",
                "properties": {
                    "mcocid": {
                        "type": "integer",
                        "example": 792
                    },
                    "name": {
                        "type": "string",
                        "example": "CollegeName"
                    },
                    "nickname": {
                        "type": "string",
                        "example": "CollegeNickname"
                    },
                    "fice": {
                        "type": "string",
                        "example": "1525134"
                    },
                    "ug_inst_id": {
                        "type": "string",
                        "example": "collegeinsta"
                    },
                    "ipeds_id": {
                        "type": "string",
                        "default": "234525"
                    },
                    "address_1": {
                        "type": "string",
                        "default": "CollegeAddress1"
                    },
                    "address_2": {
                        "type": "string",
                        "default": "CollegeAddress2"
                    },
                    "city": {
                        "type": "string",
                        "default": "CollegeCity"
                    },
                    "state": {
                        "type": "string",
                        "default": "CS"
                    },
                    "zip": {
                        "type": "string",
                        "default": "12345"
                    },
                    "country": {
                        "type": "string",
                        "default": "CollegeCountry"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "M",
                                        "I",
                                        "S",
                                        "A",
                                        "B"
                                    ]
                                },
                                "value": {
                                    "type": "string",
                                    "example": "www.example.com"
                                },
                                "type_desc": {
                                    "type": "string",
                                    "enum": [
                                        "Main",
                                        "Inquiry",
                                        "Schedule Visit",
                                        "Apply",
                                        "Admissions Blog"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "invitation": {
                "type": "object",
                "required": [
                    "studentKey",
                    "mentorEmail",
                    "token"
                ],
                "properties": {
                    "studentKey": {
                        "type": "string",
                        "example": "9999999"
                    },
                    "mentorEmail": {
                        "type": "string",
                        "example": "test@user.mail"
                    },
                    "token": {
                        "type": "string",
                        "example": "12345"
                    }
                }
            },
            "invitationDetails": {
                "type": "object",
                "properties": {
                    "studentFirstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "studentLastName": {
                        "type": "string",
                        "example": "Longo"
                    },
                    "studentEmail": {
                        "type": "string",
                        "example": "test@mail.com"
                    }
                }
            },
            "activateUserFromInvitation": {
                "type": "object",
                "required": [
                    "token",
                    "mentorEmail",
                    "firstName",
                    "lastName",
                    "password",
                    "studentKey",
                    "role",
                    "acceptedTerms"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "testUserFirstName"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "testUserLastName"
                    },
                    "token": {
                        "type": "string",
                        "example": "12345"
                    },
                    "mentorEmail": {
                        "type": "string",
                        "example": "test@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "1a2b3c4d5e"
                    },
                    "studentKey": {
                        "type": "string",
                        "example": "9999999"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "counselor",
                            "principal",
                            "teacher",
                            "coach",
                            "teaching_assistant",
                            "superintendent",
                            "other"
                        ]
                    },
                    "acceptedTerms": {
                        "type": "boolean",
                        "example": true
                    },
                    "prefix": {
                        "type": "string",
                        "enum": [
                            "doctor",
                            "mr",
                            "mrs",
                            "ms"
                        ]
                    }
                }
            },
            "reportUser": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "createdBy": {
                                    "type": "string"
                                },
                                "attribute": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "value"
                                        ]
                                    }
                                },
                                "application": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "organizations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "uid": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "hsId": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "contactId": {
                                                "type": "string",
                                                "nullable": true
                                            }
                                        },
                                        "required": [
                                            "uid",
                                            "name"
                                        ]
                                    }
                                },
                                "modules": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "verifiedDate": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "lastLoginDate": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "required": [
                            "uid",
                            "firstName",
                            "lastName",
                            "email",
                            "status",
                            "createdAt",
                            "createdBy",
                            "attributes",
                            "organizations",
                            "modules",
                            "verifiedDate"
                        ]
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "required": [
                    "properties",
                    "total"
                ]
            },
            "unauthorized": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "number",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "example": "jwt expired"
                    }
                }
            },
            "healthResponse": {
                "type": "object",
                "properties": {
                    "database": {
                        "type": "string",
                        "example": "development"
                    },
                    "email": {
                        "type": "string",
                        "example": "development"
                    },
                    "genericCache": {
                        "type": "string",
                        "example": "development"
                    },
                    "myOptions": {
                        "type": "string",
                        "example": "development"
                    },
                    "secondarySchoolService": {
                        "type": "string",
                        "example": "development"
                    },
                    "studentCredentials": {
                        "type": "string",
                        "example": "development"
                    },
                    "studentService": {
                        "type": "string",
                        "example": "development"
                    },
                    "ums": {
                        "type": "string",
                        "example": "development"
                    }
                }
            }
        },
        "responses": {
            "200": {
                "description": "OK"
            },
            "201": {
                "description": "Created"
            },
            "202": {
                "description": "Accepted"
            },
            "204": {
                "description": "No Content"
            },
            "301": {
                "description": "Moved Permanently"
            },
            "307": {
                "description": "Temporary Redirect"
            },
            "400": {
                "description": "Bad Request"
            },
            "401": {
                "description": "Unauthorized"
            },
            "403": {
                "description": "Forbidden"
            },
            "404": {
                "description": "Not Found"
            },
            "409": {
                "description": "Conflict"
            },
            "429": {
                "description": "Too Many Requests"
            },
            "500": {
                "description": "Internal Server Error"
            },
            "504": {
                "description": "Gateway Timeout"
            }
        },
        "parameters": {
            "limit": {
                "in": "query",
                "name": "limit",
                "schema": {
                    "type": "integer",
                    "default": 20,
                    "minimum": 1
                },
                "required": false,
                "description": "Size limit for returned array"
            },
            "limit100": {
                "in": "query",
                "name": "limit",
                "schema": {
                    "type": "integer",
                    "default": 100,
                    "minimum": 1
                },
                "required": false,
                "description": "Size limit for returned array"
            },
            "offset": {
                "in": "query",
                "name": "offset",
                "schema": {
                    "type": "integer",
                    "default": 0,
                    "minimum": 0
                },
                "required": false,
                "description": "Offset for the data to be returned"
            },
            "sort": {
                "in": "query",
                "name": "sort",
                "schema": {
                    "type": "string",
                    "example": "fieldName(asc),otherFieldName(desc)"
                },
                "required": false,
                "description": "Specifies sorting and sort order by fields"
            },
            "status": {
                "in": "query",
                "name": "status",
                "schema": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive",
                        "Pending"
                    ]
                },
                "required": false,
                "description": "Filters list by status"
            },
            "type": {
                "in": "query",
                "name": "type",
                "schema": {
                    "type": "string",
                    "example": "User"
                },
                "description": "Filter user list by type Example: type=User This will get all users which are of User type"
            },
            "include": {
                "in": "query",
                "name": "include",
                "schema": {
                    "type": "string"
                },
                "required": false,
                "description": "Includes additional data in the students base info, such as checklist or application_status_key"
            },
            "searchStr": {
                "in": "query",
                "name": "searchStr",
                "schema": {
                    "type": "string",
                    "example": "stringToSearch"
                },
                "required": false,
                "description": "Filter users list by searchStr. Example: searchStr=Abbott. \n      This will get all users containing Abbott in an important field (firstName, lastName, userName, email)"
            },
            "ignore": {
                "in": "query",
                "name": "ignore",
                "schema": {
                    "type": "string",
                    "example": "firstName|lastName"
                },
                "required": false,
                "description": "List of user fields to ignore on search when passing searchStr parameter.\n      Example: ignore=firstName|lastName"
            },
            "firstName": {
                "in": "query",
                "name": "firstName",
                "schema": {
                    "type": "string",
                    "example": "Jack|Jackson"
                },
                "description": "Filter user list by firstName Example: firstName=Jack|Jackson This will get all users with firstName matching \"Jack\" or \"Jackson\"\n"
            },
            "lastName": {
                "in": "query",
                "name": "lastName",
                "schema": {
                    "type": "string",
                    "example": "Sam|Samwise"
                },
                "description": "Filter user list by lastName Example: lastName=Sam|Samwise This will get all users with lastName matching \"Sam\" or \"Samwise\"\n"
            },
            "email": {
                "in": "query",
                "name": "email",
                "schema": {
                    "type": "string",
                    "example": "mail@mal.com"
                },
                "description": "Filter user list by email Example: firstName=mail@mail.com This will get the user with email \"mail@mail.com\"\n"
            },
            "createdAt": {
                "in": "query",
                "name": "createdAt",
                "schema": {
                    "type": "string",
                    "example": "2020-03-26T17:16:46.872Z"
                },
                "description": "Filter by createdAt. Example 2020-03-26T17:16:46.872Z"
            },
            "verifiedDate": {
                "in": "query",
                "name": "verifiedDate",
                "schema": {
                    "type": "string",
                    "example": "2020-03-26T17:16:46.872Z"
                },
                "description": "Filter by verifiedDate. Example 2020-03-26T17:16:46.872Z"
            },
            "name": {
                "in": "query",
                "name": "name",
                "schema": {
                    "type": "string",
                    "example": "testName"
                },
                "description": "Filter organizations list by name Example: name=Org1|Org2 This will get all organizations with Org1 or Org2 as the name\n"
            },
            "simple": {
                "in": "query",
                "name": "simple",
                "schema": {
                    "type": "boolean",
                    "example": true
                },
                "description": "If marked as true will return a simple version of the object (without joins or aggregations), defaults to false"
            },
            "search": {
                "in": "query",
                "name": "search",
                "schema": {
                    "type": "string",
                    "example": "Stan"
                },
                "required": false,
                "description": "Used for filtering results based on a search string"
            },
            "relationshipTypes": {
                "in": "query",
                "name": "relationshipTypes",
                "schema": {
                    "type": "string",
                    "enum": [
                        "mentoring",
                        "counseling"
                    ]
                },
                "required": false,
                "description": "Parameter to filter results based on the relationship type"
            },
            "surveyYear": {
                "in": "query",
                "name": "surveyYear",
                "schema": {
                    "type": "number",
                    "example": 2020
                },
                "required": true,
                "description": "MCO's Survey Year"
            },
            "gradYears": {
                "in": "query",
                "name": "gradYears",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "minItems": 1
                },
                "explode": false,
                "required": false,
                "description": "List of student graduation years for filtering"
            },
            "hsIds": {
                "in": "query",
                "name": "hsIds",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "HS001234",
                        "HS054321"
                    ]
                },
                "explode": false,
                "required": false,
                "description": "List of MCO's HS IDs for filtering"
            },
            "editions": {
                "in": "query",
                "name": "editions",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "mco",
                            "mop"
                        ]
                    },
                    "example": [
                        "mco",
                        "mop"
                    ]
                },
                "required": false,
                "description": "Survey editions"
            },
            "permission": {
                "in": "query",
                "name": "permission",
                "schema": {
                    "type": "string",
                    "enum": [
                        "applicationManagement",
                        "credentialSubmission"
                    ],
                    "example": "credentialSubmission"
                },
                "description": "Filter results based on a specific user permission"
            },
            "invitationToken": {
                "in": "query",
                "name": "token",
                "description": "The invitation validation token\n",
                "schema": {
                    "type": "string"
                },
                "required": true
            },
            "deleteReason": {
                "in": "query",
                "name": "reason",
                "schema": {
                    "type": "string",
                    "example": "reason"
                },
                "description": "Text containing the reason to delete a credential"
            },
            "externalId": {
                "in": "query",
                "name": "externalId",
                "schema": {
                    "type": "string",
                    "example": "HC000123"
                }
            },
            "externalSource": {
                "in": "query",
                "name": "externalSource",
                "schema": {
                    "type": "string",
                    "example": "contact_id"
                }
            },
            "overwrites": {
                "name": "overwrites",
                "in": "query",
                "description": "Send it as 'true' to receive attribute overwrites. Default is false.",
                "schema": {
                    "type": "string",
                    "enum": [
                        true,
                        false
                    ]
                }
            },
            "uid": {
                "name": "uid",
                "in": "path",
                "description": "Unique identifier in UMS",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "studentKey": {
                "name": "studentKey",
                "in": "path",
                "description": "Student key",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "credUid": {
                "name": "credUid",
                "in": "path",
                "description": "Credential unique ID",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "collegeFice": {
                "name": "collegeFice",
                "in": "path",
                "description": "Unique ID for college",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "collegeId": {
                "name": "collegeId",
                "in": "path",
                "description": "Unique ID (mcocid) for MCO college",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "highSchoolId": {
                "name": "hsId",
                "in": "path",
                "description": "Unique ID for MCO High School",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "mentorEmail": {
                "name": "mentorEmail",
                "in": "path",
                "description": "The invited mentor email, possibly already associated to an Encourage account",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "moduleIdentifier": {
                "name": "moduleIdentifier",
                "in": "path",
                "description": "Module identifier (can be uid or key)",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "contactId": {
                "name": "contactId",
                "in": "path",
                "description": "The external ID, contact_id, of the educator contact",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "sendEmail": {
                "name": "Send-Email",
                "in": "header",
                "description": "Indicates whether an actual email should be sent or not. For security reasons the default behavior is to not send any email.\n",
                "schema": {
                    "type": "string",
                    "enum": [
                        "not-allowed",
                        "allowed"
                    ]
                }
            },
            "cacheControl": {
                "name": "Cache-Control",
                "in": "header",
                "description": "Informs the service that it should skip cache reading (no-cache), writing (no-store) or both in this request",
                "schema": {
                    "type": "string",
                    "enum": [
                        "no-cache",
                        "no-store",
                        "no-cache no-store"
                    ]
                }
            }
        },
        "headers": {
            "total-count": {
                "schema": {
                    "type": "integer"
                },
                "description": "The total number of resources for the input query"
            },
            "total-pages": {
                "schema": {
                    "type": "integer"
                },
                "description": "The total number of pages considering the input query and the limit query parameter"
            },
            "prev-offset": {
                "schema": {
                    "type": "integer"
                },
                "description": "The value of the offset in order to get the previous set of resources considering the same input query and the limit parameter"
            },
            "next-offset": {
                "schema": {
                    "type": "integer"
                },
                "description": "The value of the offset in order to get the next set of resources considering the same input query and the limit parameter"
            },
            "Expires": {
                "schema": {
                    "type": "string"
                },
                "description": "The expiration date for a given requested resource, only when obtained from the cache"
            }
        },
        "securitySchemes": {
            "JWT": {
                "description": "In order to access the service a valid JWT token must be passed in all the queries in the 'Authorization' header.\n        \nA valid JWT token is generated by the API and returned as answer of a call to the route /authenticate giving a valid user & password.\n        \nThe following syntax must be used in the 'Authorization' header:\n        \nJWT xxxxxx.yyyyyyy.zzzzzz\n        \n",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            },
            "AWS": {
                "description": "AWS API Key for the environment\n",
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            },
            "Organization": {
                "description": "Organization UID\n",
                "type": "apiKey",
                "name": "Organization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "JWT": []
        }
    ],
    "externalDocs": {
        "url": "https://nrccua.atlassian.net/wiki/spaces/MDL/pages/102531073/API+Design+Guidelines",
        "description": "Learn more about operations on request/response fields provided by this service."
    }
}
